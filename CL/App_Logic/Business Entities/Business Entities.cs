//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//		Template updated by: Mohammad Ashraful Alam, Microsoft MVP, ASP.NET [admin@ashraful.net]
//		Modification comment: made few items mockable. (03-30-2010)
//			* Made ObjectSet properties of database context as virtual and return type as IObjectSet
//			* Made stored procedure (function import) methods virtual and return type as List<Entity>
//			* Seperate name space for data containers	
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Objects.DataClasses;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using System.Collections.Generic;//custom-code
using Eisk.Helpers;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_ActionProposed_Color", "Color", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Color), "ActionProposed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.ActionProposed), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_TreeDetails_ActionProposed", "ActionProposed", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Eisk.BusinessEntities.ActionProposed), "TreeDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.TreeDetail), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_ApplicationGroups_Applications", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Application), "Application_Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Application_Groups), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_ApplicationGroups_Groups", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Group), "Application_Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Application_Groups), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_ProjectInfo_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Eisk.BusinessEntities.City), "ProjectInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.ProjectInfo), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Perimeters_Color", "Color", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Color), "Perimeter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Perimeter), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Organisms_CommonNames", "CommonName", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.CommonName), "Organism", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Organism), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_TreeDetails_Condition", "Condition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Eisk.BusinessEntities.Condition), "TreeDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.TreeDetail), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_TreeDetails_Daps", "TreeDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.TreeDetail), "Dap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Dap), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Tokens_Device", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Device), "Token", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Token), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_GroupProjects_Groups", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Group), "Group_Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Group_Projects), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_GroupProjects_Projects", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Project), "Group_Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Group_Projects), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_GroupsUsers_Groups", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Group), "Group_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Group_Users), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_GroupsUsers_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.User), "Group_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Group_Users), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_NotificationUser_Group", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Eisk.BusinessEntities.Group), "Notification_User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Notification_User), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Organisms_Groups", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Group), "Organism", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Organism), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_NotificationUser_Notification", "Notification", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Eisk.BusinessEntities.Notification), "Notification_User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Notification_User), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_NotificationUser_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Eisk.BusinessEntities.User), "Notification_User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Notification_User), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Organisms_OrganismTypes", "OrganismType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.OrganismType), "Organism", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Organism), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Organisms_ProjectOrganisms", "Organism", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Organism), "Project_Organisms", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Project_Organisms), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Organisms_ScientificNames", "ScientificName", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.ScientificName), "Organism", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Organism), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_PerimeterPoints_Perimeters1", "Perimeter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Perimeter), "PerimeterPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.PerimeterPoint), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Projects_Perimeters", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Project), "Perimeter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Perimeter), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Project_Organisms_TreeDetails", "Project_Organisms", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Project_Organisms), "TreeDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.TreeDetail), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Projects_ProjectOrganisms", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Project), "Project_Organisms", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Project_Organisms), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Projects_ProjectInfo", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Project), "ProjectInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.ProjectInfo), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Projects_ProjectInfoTreeLocation", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Project), "ProjectInfoTreeLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.ProjectInfoTreeLocation), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_RoleUsers_Roles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.Role), "Role_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Role_Users), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_RoleUsers_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.User), "Role_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Role_Users), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Tokens_TokenType", "TokenType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.TokenType), "Token", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.Token), true)]//custom-code
[assembly: EdmRelationshipAttribute("Model_Namespace", "FK_Users_UserInfo", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Eisk.BusinessEntities.User), "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Eisk.BusinessEntities.UserInfo), true)]//custom-code

#endregion


namespace Eisk.BusinessEntities{//custom-code
#region Entities

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="ActionProposed")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class ActionProposed : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new ActionProposed object.
    /// </summary>
    /// <param name="actionProposedID">Initial value of the ActionProposedID property.</param>
    /// <param name="actionProposedDesc">Initial value of the ActionProposedDesc property.</param>
    /// <param name="colorID">Initial value of the ColorID property.</param>
    public static ActionProposed CreateActionProposed(global::System.Int32 actionProposedID, global::System.String actionProposedDesc, global::System.Int32 colorID)
    {
        ActionProposed actionProposed = new ActionProposed();
        actionProposed.ActionProposedID = actionProposedID;
        actionProposed.ActionProposedDesc = actionProposedDesc;
        actionProposed.ColorID = colorID;
        return actionProposed;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ActionProposedID
    {
        get
        {
            return _ActionProposedID;
        }
        set
        {
            if (_ActionProposedID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("ActionProposedID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnActionProposedIDChanging(value);
                ReportPropertyChanging("ActionProposedID");
                _ActionProposedID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActionProposedID");
                OnActionProposedIDChanged();
            }
        }
    }
    private global::System.Int32 _ActionProposedID;
    partial void OnActionProposedIDChanging(global::System.Int32 value);
    partial void OnActionProposedIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String ActionProposedDesc
    {
        get
        {
            return _ActionProposedDesc;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ActionProposedDesc");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("ActionProposedDesc");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnActionProposedDescChanging(value);
            ReportPropertyChanging("ActionProposedDesc");
            _ActionProposedDesc = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("ActionProposedDesc");
            OnActionProposedDescChanged();
        }
    }
    private global::System.String _ActionProposedDesc;
    partial void OnActionProposedDescChanging(global::System.String value);
    partial void OnActionProposedDescChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ColorID
    {
        get
        {
            return _ColorID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ColorID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnColorIDChanging(value);
            ReportPropertyChanging("ColorID");
            _ColorID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ColorID");
            OnColorIDChanged();
        }
    }
    private global::System.Int32 _ColorID;
    partial void OnColorIDChanging(global::System.Int32 value);
    partial void OnColorIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_ActionProposed_Color", "Color")]
    public Color Color
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("Model_Namespace.FK_ActionProposed_Color", "Color").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("Model_Namespace.FK_ActionProposed_Color", "Color").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Color> ColorReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("Model_Namespace.FK_ActionProposed_Color", "Color");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Color>("Model_Namespace.FK_ActionProposed_Color", "Color", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_TreeDetails_ActionProposed", "TreeDetail")]
    public EntityCollection<TreeDetail> TreeDetails
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TreeDetail>("Model_Namespace.FK_TreeDetails_ActionProposed", "TreeDetail");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TreeDetail>("Model_Namespace.FK_TreeDetails_ActionProposed", "TreeDetail", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Application")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Application : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Application object.
    /// </summary>
    /// <param name="applicationID">Initial value of the ApplicationID property.</param>
    /// <param name="applicationName">Initial value of the ApplicationName property.</param>
    public static Application CreateApplication(global::System.Int32 applicationID, global::System.String applicationName)
    {
        Application application = new Application();
        application.ApplicationID = applicationID;
        application.ApplicationName = applicationName;
        return application;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ApplicationID
    {
        get
        {
            return _ApplicationID;
        }
        set
        {
            if (_ApplicationID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("ApplicationID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
    }
    private global::System.Int32 _ApplicationID;
    partial void OnApplicationIDChanging(global::System.Int32 value);
    partial void OnApplicationIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String ApplicationName
    {
        get
        {
            return _ApplicationName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ApplicationName");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("ApplicationName");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnApplicationNameChanging(value);
            ReportPropertyChanging("ApplicationName");
            _ApplicationName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("ApplicationName");
            OnApplicationNameChanged();
        }
    }
    private global::System.String _ApplicationName;
    partial void OnApplicationNameChanging(global::System.String value);
    partial void OnApplicationNameChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_ApplicationGroups_Applications", "Application_Groups")]
    public EntityCollection<Application_Groups> Application_Groups
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application_Groups>("Model_Namespace.FK_ApplicationGroups_Applications", "Application_Groups");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application_Groups>("Model_Namespace.FK_ApplicationGroups_Applications", "Application_Groups", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Application_Groups")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Application_Groups : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Application_Groups object.
    /// </summary>
    /// <param name="applicationGroupID">Initial value of the ApplicationGroupID property.</param>
    /// <param name="applicationID">Initial value of the ApplicationID property.</param>
    /// <param name="groupID">Initial value of the GroupID property.</param>
    public static Application_Groups CreateApplication_Groups(global::System.Int32 applicationGroupID, global::System.Int32 applicationID, global::System.Int32 groupID)
    {
        Application_Groups application_Groups = new Application_Groups();
        application_Groups.ApplicationGroupID = applicationGroupID;
        application_Groups.ApplicationID = applicationID;
        application_Groups.GroupID = groupID;
        return application_Groups;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ApplicationGroupID
    {
        get
        {
            return _ApplicationGroupID;
        }
        set
        {
            if (_ApplicationGroupID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("ApplicationGroupID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnApplicationGroupIDChanging(value);
                ReportPropertyChanging("ApplicationGroupID");
                _ApplicationGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationGroupID");
                OnApplicationGroupIDChanged();
            }
        }
    }
    private global::System.Int32 _ApplicationGroupID;
    partial void OnApplicationGroupIDChanging(global::System.Int32 value);
    partial void OnApplicationGroupIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ApplicationID
    {
        get
        {
            return _ApplicationID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ApplicationID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnApplicationIDChanging(value);
            ReportPropertyChanging("ApplicationID");
            _ApplicationID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ApplicationID");
            OnApplicationIDChanged();
        }
    }
    private global::System.Int32 _ApplicationID;
    partial void OnApplicationIDChanging(global::System.Int32 value);
    partial void OnApplicationIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 GroupID
    {
        get
        {
            return _GroupID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("GroupID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnGroupIDChanging(value);
            ReportPropertyChanging("GroupID");
            _GroupID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("GroupID");
            OnGroupIDChanged();
        }
    }
    private global::System.Int32 _GroupID;
    partial void OnGroupIDChanging(global::System.Int32 value);
    partial void OnGroupIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_ApplicationGroups_Applications", "Application")]
    public Application Application
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Model_Namespace.FK_ApplicationGroups_Applications", "Application").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Model_Namespace.FK_ApplicationGroups_Applications", "Application").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Application> ApplicationReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Model_Namespace.FK_ApplicationGroups_Applications", "Application");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Model_Namespace.FK_ApplicationGroups_Applications", "Application", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_ApplicationGroups_Groups", "Group")]
    public Group Group
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_ApplicationGroups_Groups", "Group").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_ApplicationGroups_Groups", "Group").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Group> GroupReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_ApplicationGroups_Groups", "Group");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("Model_Namespace.FK_ApplicationGroups_Groups", "Group", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="City")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class City : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new City object.
    /// </summary>
    /// <param name="cityID">Initial value of the CityID property.</param>
    /// <param name="cityName">Initial value of the CityName property.</param>
    /// <param name="lat">Initial value of the Lat property.</param>
    /// <param name="lon">Initial value of the Lon property.</param>
    /// <param name="y">Initial value of the Y property.</param>
    /// <param name="x">Initial value of the X property.</param>
    public static City CreateCity(global::System.Int32 cityID, global::System.String cityName, global::System.Decimal lat, global::System.Decimal lon, global::System.Decimal y, global::System.Decimal x)
    {
        City city = new City();
        city.CityID = cityID;
        city.CityName = cityName;
        city.Lat = lat;
        city.Lon = lon;
        city.Y = y;
        city.X = x;
        return city;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 CityID
    {
        get
        {
            return _CityID;
        }
        set
        {
            if (_CityID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("CityID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
    }
    private global::System.Int32 _CityID;
    partial void OnCityIDChanging(global::System.Int32 value);
    partial void OnCityIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String CityName
    {
        get
        {
            return _CityName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CityName");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("CityName");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCityNameChanging(value);
            ReportPropertyChanging("CityName");
            _CityName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("CityName");
            OnCityNameChanged();
        }
    }
    private global::System.String _CityName;
    partial void OnCityNameChanging(global::System.String value);
    partial void OnCityNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Decimal Lat
    {
        get
        {
            return _Lat;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLatChanging(value);
            ReportPropertyChanging("Lat");
            _Lat = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Lat");
            OnLatChanged();
        }
    }
    private global::System.Decimal _Lat;
    partial void OnLatChanging(global::System.Decimal value);
    partial void OnLatChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Decimal Lon
    {
        get
        {
            return _Lon;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLonChanging(value);
            ReportPropertyChanging("Lon");
            _Lon = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Lon");
            OnLonChanged();
        }
    }
    private global::System.Decimal _Lon;
    partial void OnLonChanging(global::System.Decimal value);
    partial void OnLonChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Decimal Y
    {
        get
        {
            return _Y;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnYChanging(value);
            ReportPropertyChanging("Y");
            _Y = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Y");
            OnYChanged();
        }
    }
    private global::System.Decimal _Y;
    partial void OnYChanging(global::System.Decimal value);
    partial void OnYChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Decimal X
    {
        get
        {
            return _X;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnXChanging(value);
            ReportPropertyChanging("X");
            _X = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("X");
            OnXChanged();
        }
    }
    private global::System.Decimal _X;
    partial void OnXChanging(global::System.Decimal value);
    partial void OnXChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_ProjectInfo_City", "ProjectInfo")]
    public EntityCollection<ProjectInfo> ProjectInfoes
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectInfo>("Model_Namespace.FK_ProjectInfo_City", "ProjectInfo");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectInfo>("Model_Namespace.FK_ProjectInfo_City", "ProjectInfo", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Color")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Color : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Color object.
    /// </summary>
    /// <param name="colorID">Initial value of the ColorID property.</param>
    /// <param name="colorDesc">Initial value of the ColorDesc property.</param>
    /// <param name="code">Initial value of the Code property.</param>
    public static Color CreateColor(global::System.Int32 colorID, global::System.String colorDesc, global::System.String code)
    {
        Color color = new Color();
        color.ColorID = colorID;
        color.ColorDesc = colorDesc;
        color.Code = code;
        return color;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ColorID
    {
        get
        {
            return _ColorID;
        }
        set
        {
            if (_ColorID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("ColorID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnColorIDChanging(value);
                ReportPropertyChanging("ColorID");
                _ColorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ColorID");
                OnColorIDChanged();
            }
        }
    }
    private global::System.Int32 _ColorID;
    partial void OnColorIDChanging(global::System.Int32 value);
    partial void OnColorIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String ColorDesc
    {
        get
        {
            return _ColorDesc;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ColorDesc");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("ColorDesc");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnColorDescChanging(value);
            ReportPropertyChanging("ColorDesc");
            _ColorDesc = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("ColorDesc");
            OnColorDescChanged();
        }
    }
    private global::System.String _ColorDesc;
    partial void OnColorDescChanging(global::System.String value);
    partial void OnColorDescChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String Code
    {
        get
        {
            return _Code;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Code");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("Code");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCodeChanging(value);
            ReportPropertyChanging("Code");
            _Code = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("Code");
            OnCodeChanged();
        }
    }
    private global::System.String _Code;
    partial void OnCodeChanging(global::System.String value);
    partial void OnCodeChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_ActionProposed_Color", "ActionProposed")]
    public EntityCollection<ActionProposed> ActionProposeds
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActionProposed>("Model_Namespace.FK_ActionProposed_Color", "ActionProposed");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActionProposed>("Model_Namespace.FK_ActionProposed_Color", "ActionProposed", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Perimeters_Color", "Perimeter")]
    public EntityCollection<Perimeter> Perimeters
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Perimeter>("Model_Namespace.FK_Perimeters_Color", "Perimeter");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Perimeter>("Model_Namespace.FK_Perimeters_Color", "Perimeter", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="CommonName")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class CommonName : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new CommonName object.
    /// </summary>
    /// <param name="commonNameID">Initial value of the CommonNameID property.</param>
    /// <param name="commonNameDesc">Initial value of the CommonNameDesc property.</param>
    /// <param name="createdDate">Initial value of the CreatedDate property.</param>
    /// <param name="creatorUserID">Initial value of the CreatorUserID property.</param>
    /// <param name="editedDate">Initial value of the EditedDate property.</param>
    /// <param name="editorUserID">Initial value of the EditorUserID property.</param>
    public static CommonName CreateCommonName(global::System.Int32 commonNameID, global::System.String commonNameDesc, global::System.DateTime createdDate, global::System.Guid creatorUserID, global::System.DateTime editedDate, global::System.Guid editorUserID)
    {
        CommonName commonName = new CommonName();
        commonName.CommonNameID = commonNameID;
        commonName.CommonNameDesc = commonNameDesc;
        commonName.CreatedDate = createdDate;
        commonName.CreatorUserID = creatorUserID;
        commonName.EditedDate = editedDate;
        commonName.EditorUserID = editorUserID;
        return commonName;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 CommonNameID
    {
        get
        {
            return _CommonNameID;
        }
        set
        {
            if (_CommonNameID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("CommonNameID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnCommonNameIDChanging(value);
                ReportPropertyChanging("CommonNameID");
                _CommonNameID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommonNameID");
                OnCommonNameIDChanged();
            }
        }
    }
    private global::System.Int32 _CommonNameID;
    partial void OnCommonNameIDChanging(global::System.Int32 value);
    partial void OnCommonNameIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String CommonNameDesc
    {
        get
        {
            return _CommonNameDesc;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CommonNameDesc");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("CommonNameDesc");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCommonNameDescChanging(value);
            ReportPropertyChanging("CommonNameDesc");
            _CommonNameDesc = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("CommonNameDesc");
            OnCommonNameDescChanged();
        }
    }
    private global::System.String _CommonNameDesc;
    partial void OnCommonNameDescChanging(global::System.String value);
    partial void OnCommonNameDescChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime CreatedDate
    {
        get
        {
            return _CreatedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CreatedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatedDateChanging(value);
            ReportPropertyChanging("CreatedDate");
            _CreatedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedDate");
            OnCreatedDateChanged();
        }
    }
    private global::System.DateTime _CreatedDate;
    partial void OnCreatedDateChanging(global::System.DateTime value);
    partial void OnCreatedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid CreatorUserID
    {
        get
        {
            return _CreatorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatorUserIDChanging(value);
            ReportPropertyChanging("CreatorUserID");
            _CreatorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatorUserID");
            OnCreatorUserIDChanged();
        }
    }
    private global::System.Guid _CreatorUserID;
    partial void OnCreatorUserIDChanging(global::System.Guid value);
    partial void OnCreatorUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime EditedDate
    {
        get
        {
            return _EditedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("EditedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditedDateChanging(value);
            ReportPropertyChanging("EditedDate");
            _EditedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditedDate");
            OnEditedDateChanged();
        }
    }
    private global::System.DateTime _EditedDate;
    partial void OnEditedDateChanging(global::System.DateTime value);
    partial void OnEditedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid EditorUserID
    {
        get
        {
            return _EditorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditorUserIDChanging(value);
            ReportPropertyChanging("EditorUserID");
            _EditorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditorUserID");
            OnEditorUserIDChanged();
        }
    }
    private global::System.Guid _EditorUserID;
    partial void OnEditorUserIDChanging(global::System.Guid value);
    partial void OnEditorUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Organisms_CommonNames", "Organism")]
    public EntityCollection<Organism> Organisms
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organism>("Model_Namespace.FK_Organisms_CommonNames", "Organism");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organism>("Model_Namespace.FK_Organisms_CommonNames", "Organism", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Condition")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Condition : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Condition object.
    /// </summary>
    /// <param name="conditionID">Initial value of the ConditionID property.</param>
    /// <param name="conditionDesc">Initial value of the ConditionDesc property.</param>
    public static Condition CreateCondition(global::System.Int32 conditionID, global::System.String conditionDesc)
    {
        Condition condition = new Condition();
        condition.ConditionID = conditionID;
        condition.ConditionDesc = conditionDesc;
        return condition;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ConditionID
    {
        get
        {
            return _ConditionID;
        }
        set
        {
            if (_ConditionID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("ConditionID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnConditionIDChanging(value);
                ReportPropertyChanging("ConditionID");
                _ConditionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConditionID");
                OnConditionIDChanged();
            }
        }
    }
    private global::System.Int32 _ConditionID;
    partial void OnConditionIDChanging(global::System.Int32 value);
    partial void OnConditionIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String ConditionDesc
    {
        get
        {
            return _ConditionDesc;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ConditionDesc");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("ConditionDesc");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnConditionDescChanging(value);
            ReportPropertyChanging("ConditionDesc");
            _ConditionDesc = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("ConditionDesc");
            OnConditionDescChanged();
        }
    }
    private global::System.String _ConditionDesc;
    partial void OnConditionDescChanging(global::System.String value);
    partial void OnConditionDescChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_TreeDetails_Condition", "TreeDetail")]
    public EntityCollection<TreeDetail> TreeDetails
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TreeDetail>("Model_Namespace.FK_TreeDetails_Condition", "TreeDetail");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TreeDetail>("Model_Namespace.FK_TreeDetails_Condition", "TreeDetail", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Dap")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Dap : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Dap object.
    /// </summary>
    /// <param name="dapID">Initial value of the DapID property.</param>
    /// <param name="treeDetailsID">Initial value of the TreeDetailsID property.</param>
    /// <param name="dapValue">Initial value of the DapValue property.</param>
    public static Dap CreateDap(global::System.Int32 dapID, global::System.Int32 treeDetailsID, global::System.Decimal dapValue)
    {
        Dap dap = new Dap();
        dap.DapID = dapID;
        dap.TreeDetailsID = treeDetailsID;
        dap.DapValue = dapValue;
        return dap;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 DapID
    {
        get
        {
            return _DapID;
        }
        set
        {
            if (_DapID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("DapID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnDapIDChanging(value);
                ReportPropertyChanging("DapID");
                _DapID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DapID");
                OnDapIDChanged();
            }
        }
    }
    private global::System.Int32 _DapID;
    partial void OnDapIDChanging(global::System.Int32 value);
    partial void OnDapIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 TreeDetailsID
    {
        get
        {
            return _TreeDetailsID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("TreeDetailsID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnTreeDetailsIDChanging(value);
            ReportPropertyChanging("TreeDetailsID");
            _TreeDetailsID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("TreeDetailsID");
            OnTreeDetailsIDChanged();
        }
    }
    private global::System.Int32 _TreeDetailsID;
    partial void OnTreeDetailsIDChanging(global::System.Int32 value);
    partial void OnTreeDetailsIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Decimal DapValue
    {
        get
        {
            return _DapValue;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnDapValueChanging(value);
            ReportPropertyChanging("DapValue");
            _DapValue = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DapValue");
            OnDapValueChanged();
        }
    }
    private global::System.Decimal _DapValue;
    partial void OnDapValueChanging(global::System.Decimal value);
    partial void OnDapValueChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_TreeDetails_Daps", "TreeDetail")]
    public TreeDetail TreeDetail
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeDetail>("Model_Namespace.FK_TreeDetails_Daps", "TreeDetail").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeDetail>("Model_Namespace.FK_TreeDetails_Daps", "TreeDetail").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<TreeDetail> TreeDetailReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TreeDetail>("Model_Namespace.FK_TreeDetails_Daps", "TreeDetail");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TreeDetail>("Model_Namespace.FK_TreeDetails_Daps", "TreeDetail", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Device")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Device : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Device object.
    /// </summary>
    /// <param name="deviceID">Initial value of the DeviceID property.</param>
    /// <param name="deviceKey">Initial value of the DeviceKey property.</param>
    /// <param name="active">Initial value of the Active property.</param>
    /// <param name="createdDate">Initial value of the CreatedDate property.</param>
    /// <param name="creatorUserID">Initial value of the CreatorUserID property.</param>
    public static Device CreateDevice(global::System.Int32 deviceID, global::System.Guid deviceKey, global::System.Boolean active, global::System.DateTime createdDate, global::System.Guid creatorUserID)
    {
        Device device = new Device();
        device.DeviceID = deviceID;
        device.DeviceKey = deviceKey;
        device.Active = active;
        device.CreatedDate = createdDate;
        device.CreatorUserID = creatorUserID;
        return device;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 DeviceID
    {
        get
        {
            return _DeviceID;
        }
        set
        {
            if (_DeviceID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("DeviceID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnDeviceIDChanging(value);
                ReportPropertyChanging("DeviceID");
                _DeviceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceID");
                OnDeviceIDChanged();
            }
        }
    }
    private global::System.Int32 _DeviceID;
    partial void OnDeviceIDChanging(global::System.Int32 value);
    partial void OnDeviceIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid DeviceKey
    {
        get
        {
            return _DeviceKey;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnDeviceKeyChanging(value);
            ReportPropertyChanging("DeviceKey");
            _DeviceKey = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DeviceKey");
            OnDeviceKeyChanged();
        }
    }
    private global::System.Guid _DeviceKey;
    partial void OnDeviceKeyChanging(global::System.Guid value);
    partial void OnDeviceKeyChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Boolean Active
    {
        get
        {
            return _Active;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnActiveChanging(value);
            ReportPropertyChanging("Active");
            _Active = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Active");
            OnActiveChanged();
        }
    }
    private global::System.Boolean _Active;
    partial void OnActiveChanging(global::System.Boolean value);
    partial void OnActiveChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime CreatedDate
    {
        get
        {
            return _CreatedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CreatedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatedDateChanging(value);
            ReportPropertyChanging("CreatedDate");
            _CreatedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedDate");
            OnCreatedDateChanged();
        }
    }
    private global::System.DateTime _CreatedDate;
    partial void OnCreatedDateChanging(global::System.DateTime value);
    partial void OnCreatedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid CreatorUserID
    {
        get
        {
            return _CreatorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatorUserIDChanging(value);
            ReportPropertyChanging("CreatorUserID");
            _CreatorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatorUserID");
            OnCreatorUserIDChanged();
        }
    }
    private global::System.Guid _CreatorUserID;
    partial void OnCreatorUserIDChanging(global::System.Guid value);
    partial void OnCreatorUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Tokens_Device", "Token")]
    public EntityCollection<Token> Tokens
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Token>("Model_Namespace.FK_Tokens_Device", "Token");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Token>("Model_Namespace.FK_Tokens_Device", "Token", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Group")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Group : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Group object.
    /// </summary>
    /// <param name="groupID">Initial value of the GroupID property.</param>
    /// <param name="groupName">Initial value of the GroupName property.</param>
    /// <param name="createdDate">Initial value of the CreatedDate property.</param>
    /// <param name="creatorUserID">Initial value of the CreatorUserID property.</param>
    /// <param name="editedDate">Initial value of the EditedDate property.</param>
    /// <param name="editorUserID">Initial value of the EditorUserID property.</param>
    public static Group CreateGroup(global::System.Int32 groupID, global::System.String groupName, global::System.DateTime createdDate, global::System.Guid creatorUserID, global::System.DateTime editedDate, global::System.Guid editorUserID)
    {
        Group group = new Group();
        group.GroupID = groupID;
        group.GroupName = groupName;
        group.CreatedDate = createdDate;
        group.CreatorUserID = creatorUserID;
        group.EditedDate = editedDate;
        group.EditorUserID = editorUserID;
        return group;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 GroupID
    {
        get
        {
            return _GroupID;
        }
        set
        {
            if (_GroupID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("GroupID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
    }
    private global::System.Int32 _GroupID;
    partial void OnGroupIDChanging(global::System.Int32 value);
    partial void OnGroupIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String GroupName
    {
        get
        {
            return _GroupName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("GroupName");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("GroupName");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnGroupNameChanging(value);
            ReportPropertyChanging("GroupName");
            _GroupName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("GroupName");
            OnGroupNameChanged();
        }
    }
    private global::System.String _GroupName;
    partial void OnGroupNameChanging(global::System.String value);
    partial void OnGroupNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime CreatedDate
    {
        get
        {
            return _CreatedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CreatedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatedDateChanging(value);
            ReportPropertyChanging("CreatedDate");
            _CreatedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedDate");
            OnCreatedDateChanged();
        }
    }
    private global::System.DateTime _CreatedDate;
    partial void OnCreatedDateChanging(global::System.DateTime value);
    partial void OnCreatedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid CreatorUserID
    {
        get
        {
            return _CreatorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatorUserIDChanging(value);
            ReportPropertyChanging("CreatorUserID");
            _CreatorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatorUserID");
            OnCreatorUserIDChanged();
        }
    }
    private global::System.Guid _CreatorUserID;
    partial void OnCreatorUserIDChanging(global::System.Guid value);
    partial void OnCreatorUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime EditedDate
    {
        get
        {
            return _EditedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("EditedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditedDateChanging(value);
            ReportPropertyChanging("EditedDate");
            _EditedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditedDate");
            OnEditedDateChanged();
        }
    }
    private global::System.DateTime _EditedDate;
    partial void OnEditedDateChanging(global::System.DateTime value);
    partial void OnEditedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid EditorUserID
    {
        get
        {
            return _EditorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditorUserIDChanging(value);
            ReportPropertyChanging("EditorUserID");
            _EditorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditorUserID");
            OnEditorUserIDChanged();
        }
    }
    private global::System.Guid _EditorUserID;
    partial void OnEditorUserIDChanging(global::System.Guid value);
    partial void OnEditorUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_ApplicationGroups_Groups", "Application_Groups")]
    public EntityCollection<Application_Groups> Application_Groups
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application_Groups>("Model_Namespace.FK_ApplicationGroups_Groups", "Application_Groups");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application_Groups>("Model_Namespace.FK_ApplicationGroups_Groups", "Application_Groups", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_GroupProjects_Groups", "Group_Projects")]
    public EntityCollection<Group_Projects> Group_Projects
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group_Projects>("Model_Namespace.FK_GroupProjects_Groups", "Group_Projects");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group_Projects>("Model_Namespace.FK_GroupProjects_Groups", "Group_Projects", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_GroupsUsers_Groups", "Group_Users")]
    public EntityCollection<Group_Users> Group_Users
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group_Users>("Model_Namespace.FK_GroupsUsers_Groups", "Group_Users");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group_Users>("Model_Namespace.FK_GroupsUsers_Groups", "Group_Users", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_NotificationUser_Group", "Notification_User")]
    public EntityCollection<Notification_User> Notification_User
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notification_User>("Model_Namespace.FK_NotificationUser_Group", "Notification_User");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notification_User>("Model_Namespace.FK_NotificationUser_Group", "Notification_User", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Organisms_Groups", "Organism")]
    public EntityCollection<Organism> Organisms
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organism>("Model_Namespace.FK_Organisms_Groups", "Organism");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organism>("Model_Namespace.FK_Organisms_Groups", "Organism", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Group_Projects")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Group_Projects : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Group_Projects object.
    /// </summary>
    /// <param name="groupProjectID">Initial value of the GroupProjectID property.</param>
    /// <param name="groupID">Initial value of the GroupID property.</param>
    /// <param name="projectID">Initial value of the ProjectID property.</param>
    public static Group_Projects CreateGroup_Projects(global::System.Int32 groupProjectID, global::System.Int32 groupID, global::System.Int32 projectID)
    {
        Group_Projects group_Projects = new Group_Projects();
        group_Projects.GroupProjectID = groupProjectID;
        group_Projects.GroupID = groupID;
        group_Projects.ProjectID = projectID;
        return group_Projects;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 GroupProjectID
    {
        get
        {
            return _GroupProjectID;
        }
        set
        {
            if (_GroupProjectID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("GroupProjectID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnGroupProjectIDChanging(value);
                ReportPropertyChanging("GroupProjectID");
                _GroupProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupProjectID");
                OnGroupProjectIDChanged();
            }
        }
    }
    private global::System.Int32 _GroupProjectID;
    partial void OnGroupProjectIDChanging(global::System.Int32 value);
    partial void OnGroupProjectIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 GroupID
    {
        get
        {
            return _GroupID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("GroupID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnGroupIDChanging(value);
            ReportPropertyChanging("GroupID");
            _GroupID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("GroupID");
            OnGroupIDChanged();
        }
    }
    private global::System.Int32 _GroupID;
    partial void OnGroupIDChanging(global::System.Int32 value);
    partial void OnGroupIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ProjectID
    {
        get
        {
            return _ProjectID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ProjectID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnProjectIDChanging(value);
            ReportPropertyChanging("ProjectID");
            _ProjectID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ProjectID");
            OnProjectIDChanged();
        }
    }
    private global::System.Int32 _ProjectID;
    partial void OnProjectIDChanging(global::System.Int32 value);
    partial void OnProjectIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_GroupProjects_Groups", "Group")]
    public Group Group
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_GroupProjects_Groups", "Group").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_GroupProjects_Groups", "Group").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Group> GroupReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_GroupProjects_Groups", "Group");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("Model_Namespace.FK_GroupProjects_Groups", "Group", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_GroupProjects_Projects", "Project")]
    public Project Project
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_GroupProjects_Projects", "Project").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_GroupProjects_Projects", "Project").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Project> ProjectReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_GroupProjects_Projects", "Project");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("Model_Namespace.FK_GroupProjects_Projects", "Project", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Group_Users")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Group_Users : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Group_Users object.
    /// </summary>
    /// <param name="groupUserID">Initial value of the GroupUserID property.</param>
    /// <param name="groupID">Initial value of the GroupID property.</param>
    /// <param name="userID">Initial value of the UserID property.</param>
    public static Group_Users CreateGroup_Users(global::System.Int32 groupUserID, global::System.Int32 groupID, global::System.Guid userID)
    {
        Group_Users group_Users = new Group_Users();
        group_Users.GroupUserID = groupUserID;
        group_Users.GroupID = groupID;
        group_Users.UserID = userID;
        return group_Users;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 GroupUserID
    {
        get
        {
            return _GroupUserID;
        }
        set
        {
            if (_GroupUserID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("GroupUserID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnGroupUserIDChanging(value);
                ReportPropertyChanging("GroupUserID");
                _GroupUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupUserID");
                OnGroupUserIDChanged();
            }
        }
    }
    private global::System.Int32 _GroupUserID;
    partial void OnGroupUserIDChanging(global::System.Int32 value);
    partial void OnGroupUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 GroupID
    {
        get
        {
            return _GroupID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("GroupID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnGroupIDChanging(value);
            ReportPropertyChanging("GroupID");
            _GroupID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("GroupID");
            OnGroupIDChanged();
        }
    }
    private global::System.Int32 _GroupID;
    partial void OnGroupIDChanging(global::System.Int32 value);
    partial void OnGroupIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid UserID
    {
        get
        {
            return _UserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnUserIDChanging(value);
            ReportPropertyChanging("UserID");
            _UserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("UserID");
            OnUserIDChanged();
        }
    }
    private global::System.Guid _UserID;
    partial void OnUserIDChanging(global::System.Guid value);
    partial void OnUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_GroupsUsers_Groups", "Group")]
    public Group Group
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_GroupsUsers_Groups", "Group").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_GroupsUsers_Groups", "Group").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Group> GroupReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_GroupsUsers_Groups", "Group");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("Model_Namespace.FK_GroupsUsers_Groups", "Group", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_GroupsUsers_Users", "User")]
    public User User
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model_Namespace.FK_GroupsUsers_Users", "User").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model_Namespace.FK_GroupsUsers_Users", "User").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<User> UserReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model_Namespace.FK_GroupsUsers_Users", "User");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model_Namespace.FK_GroupsUsers_Users", "User", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Notification")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Notification : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Notification object.
    /// </summary>
    /// <param name="notificationID">Initial value of the NotificationID property.</param>
    /// <param name="notificationDesc">Initial value of the NotificationDesc property.</param>
    /// <param name="notificationSubject">Initial value of the NotificationSubject property.</param>
    /// <param name="createdDate">Initial value of the CreatedDate property.</param>
    /// <param name="creatorUserID">Initial value of the CreatorUserID property.</param>
    public static Notification CreateNotification(global::System.Int32 notificationID, global::System.String notificationDesc, global::System.String notificationSubject, global::System.DateTime createdDate, global::System.Guid creatorUserID)
    {
        Notification notification = new Notification();
        notification.NotificationID = notificationID;
        notification.NotificationDesc = notificationDesc;
        notification.NotificationSubject = notificationSubject;
        notification.CreatedDate = createdDate;
        notification.CreatorUserID = creatorUserID;
        return notification;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 NotificationID
    {
        get
        {
            return _NotificationID;
        }
        set
        {
            if (_NotificationID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("NotificationID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnNotificationIDChanging(value);
                ReportPropertyChanging("NotificationID");
                _NotificationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotificationID");
                OnNotificationIDChanged();
            }
        }
    }
    private global::System.Int32 _NotificationID;
    partial void OnNotificationIDChanging(global::System.Int32 value);
    partial void OnNotificationIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String NotificationDesc
    {
        get
        {
            return _NotificationDesc;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("NotificationDesc");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("NotificationDesc");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnNotificationDescChanging(value);
            ReportPropertyChanging("NotificationDesc");
            _NotificationDesc = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("NotificationDesc");
            OnNotificationDescChanged();
        }
    }
    private global::System.String _NotificationDesc;
    partial void OnNotificationDescChanging(global::System.String value);
    partial void OnNotificationDescChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String NotificationSubject
    {
        get
        {
            return _NotificationSubject;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("NotificationSubject");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("NotificationSubject");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnNotificationSubjectChanging(value);
            ReportPropertyChanging("NotificationSubject");
            _NotificationSubject = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("NotificationSubject");
            OnNotificationSubjectChanged();
        }
    }
    private global::System.String _NotificationSubject;
    partial void OnNotificationSubjectChanging(global::System.String value);
    partial void OnNotificationSubjectChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime CreatedDate
    {
        get
        {
            return _CreatedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CreatedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatedDateChanging(value);
            ReportPropertyChanging("CreatedDate");
            _CreatedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedDate");
            OnCreatedDateChanged();
        }
    }
    private global::System.DateTime _CreatedDate;
    partial void OnCreatedDateChanging(global::System.DateTime value);
    partial void OnCreatedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid CreatorUserID
    {
        get
        {
            return _CreatorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatorUserIDChanging(value);
            ReportPropertyChanging("CreatorUserID");
            _CreatorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatorUserID");
            OnCreatorUserIDChanged();
        }
    }
    private global::System.Guid _CreatorUserID;
    partial void OnCreatorUserIDChanging(global::System.Guid value);
    partial void OnCreatorUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> EditedDate
    {
        get
        {
            return _EditedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("EditedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditedDateChanging(value);
            ReportPropertyChanging("EditedDate");
            _EditedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditedDate");
            OnEditedDateChanged();
        }
    }
    private Nullable<global::System.DateTime> _EditedDate;
    partial void OnEditedDateChanging(Nullable<global::System.DateTime> value);
    partial void OnEditedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> EditorUserID
    {
        get
        {
            return _EditorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditorUserIDChanging(value);
            ReportPropertyChanging("EditorUserID");
            _EditorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditorUserID");
            OnEditorUserIDChanged();
        }
    }
    private Nullable<global::System.Guid> _EditorUserID;
    partial void OnEditorUserIDChanging(Nullable<global::System.Guid> value);
    partial void OnEditorUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_NotificationUser_Notification", "Notification_User")]
    public EntityCollection<Notification_User> Notification_User
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notification_User>("Model_Namespace.FK_NotificationUser_Notification", "Notification_User");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notification_User>("Model_Namespace.FK_NotificationUser_Notification", "Notification_User", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Notification_User")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Notification_User : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Notification_User object.
    /// </summary>
    /// <param name="notificationUserID">Initial value of the NotificationUserID property.</param>
    public static Notification_User CreateNotification_User(global::System.Int32 notificationUserID)
    {
        Notification_User notification_User = new Notification_User();
        notification_User.NotificationUserID = notificationUserID;
        return notification_User;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 NotificationUserID
    {
        get
        {
            return _NotificationUserID;
        }
        set
        {
            if (_NotificationUserID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("NotificationUserID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnNotificationUserIDChanging(value);
                ReportPropertyChanging("NotificationUserID");
                _NotificationUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotificationUserID");
                OnNotificationUserIDChanged();
            }
        }
    }
    private global::System.Int32 _NotificationUserID;
    partial void OnNotificationUserIDChanging(global::System.Int32 value);
    partial void OnNotificationUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> NotificationID
    {
        get
        {
            return _NotificationID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("NotificationID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnNotificationIDChanging(value);
            ReportPropertyChanging("NotificationID");
            _NotificationID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("NotificationID");
            OnNotificationIDChanged();
        }
    }
    private Nullable<global::System.Int32> _NotificationID;
    partial void OnNotificationIDChanging(Nullable<global::System.Int32> value);
    partial void OnNotificationIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> GroupID
    {
        get
        {
            return _GroupID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("GroupID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnGroupIDChanging(value);
            ReportPropertyChanging("GroupID");
            _GroupID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("GroupID");
            OnGroupIDChanged();
        }
    }
    private Nullable<global::System.Int32> _GroupID;
    partial void OnGroupIDChanging(Nullable<global::System.Int32> value);
    partial void OnGroupIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> UserID
    {
        get
        {
            return _UserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnUserIDChanging(value);
            ReportPropertyChanging("UserID");
            _UserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("UserID");
            OnUserIDChanged();
        }
    }
    private Nullable<global::System.Guid> _UserID;
    partial void OnUserIDChanging(Nullable<global::System.Guid> value);
    partial void OnUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_NotificationUser_Group", "Group")]
    public Group Group
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_NotificationUser_Group", "Group").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_NotificationUser_Group", "Group").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Group> GroupReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_NotificationUser_Group", "Group");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("Model_Namespace.FK_NotificationUser_Group", "Group", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_NotificationUser_Notification", "Notification")]
    public Notification Notification
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("Model_Namespace.FK_NotificationUser_Notification", "Notification").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("Model_Namespace.FK_NotificationUser_Notification", "Notification").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Notification> NotificationReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("Model_Namespace.FK_NotificationUser_Notification", "Notification");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Notification>("Model_Namespace.FK_NotificationUser_Notification", "Notification", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_NotificationUser_User", "User")]
    public User User
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model_Namespace.FK_NotificationUser_User", "User").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model_Namespace.FK_NotificationUser_User", "User").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<User> UserReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model_Namespace.FK_NotificationUser_User", "User");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model_Namespace.FK_NotificationUser_User", "User", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Organism")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Organism : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Organism object.
    /// </summary>
    /// <param name="organismID">Initial value of the OrganismID property.</param>
    /// <param name="scientificNameID">Initial value of the ScientificNameID property.</param>
    /// <param name="commonNameID">Initial value of the CommonNameID property.</param>
    /// <param name="organismTypeID">Initial value of the OrganismTypeID property.</param>
    /// <param name="groupID">Initial value of the GroupID property.</param>
    /// <param name="createdDate">Initial value of the CreatedDate property.</param>
    /// <param name="creatorUserID">Initial value of the CreatorUserID property.</param>
    /// <param name="editedDate">Initial value of the EditedDate property.</param>
    /// <param name="editorUserID">Initial value of the EditorUserID property.</param>
    public static Organism CreateOrganism(global::System.Int32 organismID, global::System.Int32 scientificNameID, global::System.Int32 commonNameID, global::System.Int32 organismTypeID, global::System.Int32 groupID, global::System.DateTime createdDate, global::System.Guid creatorUserID, global::System.DateTime editedDate, global::System.Guid editorUserID)
    {
        Organism organism = new Organism();
        organism.OrganismID = organismID;
        organism.ScientificNameID = scientificNameID;
        organism.CommonNameID = commonNameID;
        organism.OrganismTypeID = organismTypeID;
        organism.GroupID = groupID;
        organism.CreatedDate = createdDate;
        organism.CreatorUserID = creatorUserID;
        organism.EditedDate = editedDate;
        organism.EditorUserID = editorUserID;
        return organism;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 OrganismID
    {
        get
        {
            return _OrganismID;
        }
        set
        {
            if (_OrganismID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("OrganismID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnOrganismIDChanging(value);
                ReportPropertyChanging("OrganismID");
                _OrganismID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganismID");
                OnOrganismIDChanged();
            }
        }
    }
    private global::System.Int32 _OrganismID;
    partial void OnOrganismIDChanging(global::System.Int32 value);
    partial void OnOrganismIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ScientificNameID
    {
        get
        {
            return _ScientificNameID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ScientificNameID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnScientificNameIDChanging(value);
            ReportPropertyChanging("ScientificNameID");
            _ScientificNameID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ScientificNameID");
            OnScientificNameIDChanged();
        }
    }
    private global::System.Int32 _ScientificNameID;
    partial void OnScientificNameIDChanging(global::System.Int32 value);
    partial void OnScientificNameIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 CommonNameID
    {
        get
        {
            return _CommonNameID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CommonNameID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCommonNameIDChanging(value);
            ReportPropertyChanging("CommonNameID");
            _CommonNameID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CommonNameID");
            OnCommonNameIDChanged();
        }
    }
    private global::System.Int32 _CommonNameID;
    partial void OnCommonNameIDChanging(global::System.Int32 value);
    partial void OnCommonNameIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 OrganismTypeID
    {
        get
        {
            return _OrganismTypeID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("OrganismTypeID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnOrganismTypeIDChanging(value);
            ReportPropertyChanging("OrganismTypeID");
            _OrganismTypeID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("OrganismTypeID");
            OnOrganismTypeIDChanged();
        }
    }
    private global::System.Int32 _OrganismTypeID;
    partial void OnOrganismTypeIDChanging(global::System.Int32 value);
    partial void OnOrganismTypeIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 GroupID
    {
        get
        {
            return _GroupID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("GroupID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnGroupIDChanging(value);
            ReportPropertyChanging("GroupID");
            _GroupID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("GroupID");
            OnGroupIDChanged();
        }
    }
    private global::System.Int32 _GroupID;
    partial void OnGroupIDChanging(global::System.Int32 value);
    partial void OnGroupIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime CreatedDate
    {
        get
        {
            return _CreatedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CreatedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatedDateChanging(value);
            ReportPropertyChanging("CreatedDate");
            _CreatedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedDate");
            OnCreatedDateChanged();
        }
    }
    private global::System.DateTime _CreatedDate;
    partial void OnCreatedDateChanging(global::System.DateTime value);
    partial void OnCreatedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid CreatorUserID
    {
        get
        {
            return _CreatorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatorUserIDChanging(value);
            ReportPropertyChanging("CreatorUserID");
            _CreatorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatorUserID");
            OnCreatorUserIDChanged();
        }
    }
    private global::System.Guid _CreatorUserID;
    partial void OnCreatorUserIDChanging(global::System.Guid value);
    partial void OnCreatorUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime EditedDate
    {
        get
        {
            return _EditedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("EditedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditedDateChanging(value);
            ReportPropertyChanging("EditedDate");
            _EditedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditedDate");
            OnEditedDateChanged();
        }
    }
    private global::System.DateTime _EditedDate;
    partial void OnEditedDateChanging(global::System.DateTime value);
    partial void OnEditedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid EditorUserID
    {
        get
        {
            return _EditorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditorUserIDChanging(value);
            ReportPropertyChanging("EditorUserID");
            _EditorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditorUserID");
            OnEditorUserIDChanged();
        }
    }
    private global::System.Guid _EditorUserID;
    partial void OnEditorUserIDChanging(global::System.Guid value);
    partial void OnEditorUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Organisms_CommonNames", "CommonName")]
    public CommonName CommonName
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommonName>("Model_Namespace.FK_Organisms_CommonNames", "CommonName").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommonName>("Model_Namespace.FK_Organisms_CommonNames", "CommonName").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<CommonName> CommonNameReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommonName>("Model_Namespace.FK_Organisms_CommonNames", "CommonName");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CommonName>("Model_Namespace.FK_Organisms_CommonNames", "CommonName", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Organisms_Groups", "Group")]
    public Group Group
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_Organisms_Groups", "Group").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_Organisms_Groups", "Group").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Group> GroupReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("Model_Namespace.FK_Organisms_Groups", "Group");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("Model_Namespace.FK_Organisms_Groups", "Group", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Organisms_OrganismTypes", "OrganismType")]
    public OrganismType OrganismType
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganismType>("Model_Namespace.FK_Organisms_OrganismTypes", "OrganismType").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganismType>("Model_Namespace.FK_Organisms_OrganismTypes", "OrganismType").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<OrganismType> OrganismTypeReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganismType>("Model_Namespace.FK_Organisms_OrganismTypes", "OrganismType");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganismType>("Model_Namespace.FK_Organisms_OrganismTypes", "OrganismType", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Organisms_ProjectOrganisms", "Project_Organisms")]
    public EntityCollection<Project_Organisms> Project_Organisms
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project_Organisms>("Model_Namespace.FK_Organisms_ProjectOrganisms", "Project_Organisms");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project_Organisms>("Model_Namespace.FK_Organisms_ProjectOrganisms", "Project_Organisms", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Organisms_ScientificNames", "ScientificName")]
    public ScientificName ScientificName
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScientificName>("Model_Namespace.FK_Organisms_ScientificNames", "ScientificName").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScientificName>("Model_Namespace.FK_Organisms_ScientificNames", "ScientificName").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<ScientificName> ScientificNameReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScientificName>("Model_Namespace.FK_Organisms_ScientificNames", "ScientificName");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScientificName>("Model_Namespace.FK_Organisms_ScientificNames", "ScientificName", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="OrganismType")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class OrganismType : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new OrganismType object.
    /// </summary>
    /// <param name="organismTypeID">Initial value of the OrganismTypeID property.</param>
    /// <param name="organismTypeName">Initial value of the OrganismTypeName property.</param>
    public static OrganismType CreateOrganismType(global::System.Int32 organismTypeID, global::System.String organismTypeName)
    {
        OrganismType organismType = new OrganismType();
        organismType.OrganismTypeID = organismTypeID;
        organismType.OrganismTypeName = organismTypeName;
        return organismType;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 OrganismTypeID
    {
        get
        {
            return _OrganismTypeID;
        }
        set
        {
            if (_OrganismTypeID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("OrganismTypeID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnOrganismTypeIDChanging(value);
                ReportPropertyChanging("OrganismTypeID");
                _OrganismTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganismTypeID");
                OnOrganismTypeIDChanged();
            }
        }
    }
    private global::System.Int32 _OrganismTypeID;
    partial void OnOrganismTypeIDChanging(global::System.Int32 value);
    partial void OnOrganismTypeIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String OrganismTypeName
    {
        get
        {
            return _OrganismTypeName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("OrganismTypeName");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("OrganismTypeName");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnOrganismTypeNameChanging(value);
            ReportPropertyChanging("OrganismTypeName");
            _OrganismTypeName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("OrganismTypeName");
            OnOrganismTypeNameChanged();
        }
    }
    private global::System.String _OrganismTypeName;
    partial void OnOrganismTypeNameChanging(global::System.String value);
    partial void OnOrganismTypeNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> CreatedDate
    {
        get
        {
            return _CreatedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CreatedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatedDateChanging(value);
            ReportPropertyChanging("CreatedDate");
            _CreatedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedDate");
            OnCreatedDateChanged();
        }
    }
    private Nullable<global::System.DateTime> _CreatedDate;
    partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
    partial void OnCreatedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> CreatorUserID
    {
        get
        {
            return _CreatorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatorUserIDChanging(value);
            ReportPropertyChanging("CreatorUserID");
            _CreatorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatorUserID");
            OnCreatorUserIDChanged();
        }
    }
    private Nullable<global::System.Guid> _CreatorUserID;
    partial void OnCreatorUserIDChanging(Nullable<global::System.Guid> value);
    partial void OnCreatorUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> EditedDate
    {
        get
        {
            return _EditedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("EditedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditedDateChanging(value);
            ReportPropertyChanging("EditedDate");
            _EditedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditedDate");
            OnEditedDateChanged();
        }
    }
    private Nullable<global::System.DateTime> _EditedDate;
    partial void OnEditedDateChanging(Nullable<global::System.DateTime> value);
    partial void OnEditedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> EditorUserID
    {
        get
        {
            return _EditorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditorUserIDChanging(value);
            ReportPropertyChanging("EditorUserID");
            _EditorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditorUserID");
            OnEditorUserIDChanged();
        }
    }
    private Nullable<global::System.Guid> _EditorUserID;
    partial void OnEditorUserIDChanging(Nullable<global::System.Guid> value);
    partial void OnEditorUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Organisms_OrganismTypes", "Organism")]
    public EntityCollection<Organism> Organisms
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organism>("Model_Namespace.FK_Organisms_OrganismTypes", "Organism");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organism>("Model_Namespace.FK_Organisms_OrganismTypes", "Organism", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Perimeter")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Perimeter : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Perimeter object.
    /// </summary>
    /// <param name="perimeterID">Initial value of the PerimeterID property.</param>
    /// <param name="projectID">Initial value of the ProjectID property.</param>
    /// <param name="perimeterName">Initial value of the PerimeterName property.</param>
    /// <param name="colorID">Initial value of the ColorID property.</param>
    /// <param name="isMainPerimeter">Initial value of the IsMainPerimeter property.</param>
    /// <param name="createdDate">Initial value of the CreatedDate property.</param>
    /// <param name="creatorUserID">Initial value of the CreatorUserID property.</param>
    /// <param name="editedDate">Initial value of the EditedDate property.</param>
    /// <param name="editorUserID">Initial value of the EditorUserID property.</param>
    public static Perimeter CreatePerimeter(global::System.Int32 perimeterID, global::System.Int32 projectID, global::System.String perimeterName, global::System.Int32 colorID, global::System.Boolean isMainPerimeter, global::System.DateTime createdDate, global::System.Guid creatorUserID, global::System.DateTime editedDate, global::System.Guid editorUserID)
    {
        Perimeter perimeter = new Perimeter();
        perimeter.PerimeterID = perimeterID;
        perimeter.ProjectID = projectID;
        perimeter.PerimeterName = perimeterName;
        perimeter.ColorID = colorID;
        perimeter.IsMainPerimeter = isMainPerimeter;
        perimeter.CreatedDate = createdDate;
        perimeter.CreatorUserID = creatorUserID;
        perimeter.EditedDate = editedDate;
        perimeter.EditorUserID = editorUserID;
        return perimeter;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 PerimeterID
    {
        get
        {
            return _PerimeterID;
        }
        set
        {
            if (_PerimeterID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("PerimeterID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnPerimeterIDChanging(value);
                ReportPropertyChanging("PerimeterID");
                _PerimeterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerimeterID");
                OnPerimeterIDChanged();
            }
        }
    }
    private global::System.Int32 _PerimeterID;
    partial void OnPerimeterIDChanging(global::System.Int32 value);
    partial void OnPerimeterIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ProjectID
    {
        get
        {
            return _ProjectID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ProjectID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnProjectIDChanging(value);
            ReportPropertyChanging("ProjectID");
            _ProjectID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ProjectID");
            OnProjectIDChanged();
        }
    }
    private global::System.Int32 _ProjectID;
    partial void OnProjectIDChanging(global::System.Int32 value);
    partial void OnProjectIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String PerimeterName
    {
        get
        {
            return _PerimeterName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("PerimeterName");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("PerimeterName");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnPerimeterNameChanging(value);
            ReportPropertyChanging("PerimeterName");
            _PerimeterName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("PerimeterName");
            OnPerimeterNameChanged();
        }
    }
    private global::System.String _PerimeterName;
    partial void OnPerimeterNameChanging(global::System.String value);
    partial void OnPerimeterNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ColorID
    {
        get
        {
            return _ColorID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ColorID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnColorIDChanging(value);
            ReportPropertyChanging("ColorID");
            _ColorID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ColorID");
            OnColorIDChanged();
        }
    }
    private global::System.Int32 _ColorID;
    partial void OnColorIDChanging(global::System.Int32 value);
    partial void OnColorIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Boolean IsMainPerimeter
    {
        get
        {
            return _IsMainPerimeter;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnIsMainPerimeterChanging(value);
            ReportPropertyChanging("IsMainPerimeter");
            _IsMainPerimeter = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("IsMainPerimeter");
            OnIsMainPerimeterChanged();
        }
    }
    private global::System.Boolean _IsMainPerimeter;
    partial void OnIsMainPerimeterChanging(global::System.Boolean value);
    partial void OnIsMainPerimeterChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime CreatedDate
    {
        get
        {
            return _CreatedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CreatedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatedDateChanging(value);
            ReportPropertyChanging("CreatedDate");
            _CreatedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedDate");
            OnCreatedDateChanged();
        }
    }
    private global::System.DateTime _CreatedDate;
    partial void OnCreatedDateChanging(global::System.DateTime value);
    partial void OnCreatedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid CreatorUserID
    {
        get
        {
            return _CreatorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatorUserIDChanging(value);
            ReportPropertyChanging("CreatorUserID");
            _CreatorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatorUserID");
            OnCreatorUserIDChanged();
        }
    }
    private global::System.Guid _CreatorUserID;
    partial void OnCreatorUserIDChanging(global::System.Guid value);
    partial void OnCreatorUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime EditedDate
    {
        get
        {
            return _EditedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("EditedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditedDateChanging(value);
            ReportPropertyChanging("EditedDate");
            _EditedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditedDate");
            OnEditedDateChanged();
        }
    }
    private global::System.DateTime _EditedDate;
    partial void OnEditedDateChanging(global::System.DateTime value);
    partial void OnEditedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid EditorUserID
    {
        get
        {
            return _EditorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditorUserIDChanging(value);
            ReportPropertyChanging("EditorUserID");
            _EditorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditorUserID");
            OnEditorUserIDChanged();
        }
    }
    private global::System.Guid _EditorUserID;
    partial void OnEditorUserIDChanging(global::System.Guid value);
    partial void OnEditorUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Perimeters_Color", "Color")]
    public Color Color
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("Model_Namespace.FK_Perimeters_Color", "Color").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("Model_Namespace.FK_Perimeters_Color", "Color").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Color> ColorReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("Model_Namespace.FK_Perimeters_Color", "Color");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Color>("Model_Namespace.FK_Perimeters_Color", "Color", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_PerimeterPoints_Perimeters1", "PerimeterPoint")]
    public EntityCollection<PerimeterPoint> PerimeterPoints
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerimeterPoint>("Model_Namespace.FK_PerimeterPoints_Perimeters1", "PerimeterPoint");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerimeterPoint>("Model_Namespace.FK_PerimeterPoints_Perimeters1", "PerimeterPoint", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Projects_Perimeters", "Project")]
    public Project Project
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_Projects_Perimeters", "Project").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_Projects_Perimeters", "Project").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Project> ProjectReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_Projects_Perimeters", "Project");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("Model_Namespace.FK_Projects_Perimeters", "Project", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="PerimeterPoint")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class PerimeterPoint : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new PerimeterPoint object.
    /// </summary>
    /// <param name="perimeterPointID">Initial value of the PerimeterPointID property.</param>
    /// <param name="perimeterID">Initial value of the PerimeterID property.</param>
    /// <param name="y">Initial value of the Y property.</param>
    /// <param name="x">Initial value of the X property.</param>
    public static PerimeterPoint CreatePerimeterPoint(global::System.Int32 perimeterPointID, global::System.Int32 perimeterID, global::System.Decimal y, global::System.Decimal x)
    {
        PerimeterPoint perimeterPoint = new PerimeterPoint();
        perimeterPoint.PerimeterPointID = perimeterPointID;
        perimeterPoint.PerimeterID = perimeterID;
        perimeterPoint.Y = y;
        perimeterPoint.X = x;
        return perimeterPoint;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 PerimeterPointID
    {
        get
        {
            return _PerimeterPointID;
        }
        set
        {
            if (_PerimeterPointID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("PerimeterPointID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnPerimeterPointIDChanging(value);
                ReportPropertyChanging("PerimeterPointID");
                _PerimeterPointID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerimeterPointID");
                OnPerimeterPointIDChanged();
            }
        }
    }
    private global::System.Int32 _PerimeterPointID;
    partial void OnPerimeterPointIDChanging(global::System.Int32 value);
    partial void OnPerimeterPointIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 PerimeterID
    {
        get
        {
            return _PerimeterID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("PerimeterID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnPerimeterIDChanging(value);
            ReportPropertyChanging("PerimeterID");
            _PerimeterID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("PerimeterID");
            OnPerimeterIDChanged();
        }
    }
    private global::System.Int32 _PerimeterID;
    partial void OnPerimeterIDChanging(global::System.Int32 value);
    partial void OnPerimeterIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Decimal Y
    {
        get
        {
            return _Y;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnYChanging(value);
            ReportPropertyChanging("Y");
            _Y = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Y");
            OnYChanged();
        }
    }
    private global::System.Decimal _Y;
    partial void OnYChanging(global::System.Decimal value);
    partial void OnYChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Decimal X
    {
        get
        {
            return _X;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnXChanging(value);
            ReportPropertyChanging("X");
            _X = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("X");
            OnXChanged();
        }
    }
    private global::System.Decimal _X;
    partial void OnXChanging(global::System.Decimal value);
    partial void OnXChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_PerimeterPoints_Perimeters1", "Perimeter")]
    public Perimeter Perimeter
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Perimeter>("Model_Namespace.FK_PerimeterPoints_Perimeters1", "Perimeter").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Perimeter>("Model_Namespace.FK_PerimeterPoints_Perimeters1", "Perimeter").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Perimeter> PerimeterReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Perimeter>("Model_Namespace.FK_PerimeterPoints_Perimeters1", "Perimeter");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Perimeter>("Model_Namespace.FK_PerimeterPoints_Perimeters1", "Perimeter", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Project")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Project : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Project object.
    /// </summary>
    /// <param name="projectID">Initial value of the ProjectID property.</param>
    /// <param name="createdDate">Initial value of the CreatedDate property.</param>
    /// <param name="creatorUserID">Initial value of the CreatorUserID property.</param>
    /// <param name="editedDate">Initial value of the EditedDate property.</param>
    /// <param name="editorUserID">Initial value of the EditorUserID property.</param>
    public static Project CreateProject(global::System.Int32 projectID, global::System.DateTime createdDate, global::System.Guid creatorUserID, global::System.DateTime editedDate, global::System.Guid editorUserID)
    {
        Project project = new Project();
        project.ProjectID = projectID;
        project.CreatedDate = createdDate;
        project.CreatorUserID = creatorUserID;
        project.EditedDate = editedDate;
        project.EditorUserID = editorUserID;
        return project;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ProjectID
    {
        get
        {
            return _ProjectID;
        }
        set
        {
            if (_ProjectID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("ProjectID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
    }
    private global::System.Int32 _ProjectID;
    partial void OnProjectIDChanging(global::System.Int32 value);
    partial void OnProjectIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime CreatedDate
    {
        get
        {
            return _CreatedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CreatedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatedDateChanging(value);
            ReportPropertyChanging("CreatedDate");
            _CreatedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedDate");
            OnCreatedDateChanged();
        }
    }
    private global::System.DateTime _CreatedDate;
    partial void OnCreatedDateChanging(global::System.DateTime value);
    partial void OnCreatedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid CreatorUserID
    {
        get
        {
            return _CreatorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatorUserIDChanging(value);
            ReportPropertyChanging("CreatorUserID");
            _CreatorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatorUserID");
            OnCreatorUserIDChanged();
        }
    }
    private global::System.Guid _CreatorUserID;
    partial void OnCreatorUserIDChanging(global::System.Guid value);
    partial void OnCreatorUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime EditedDate
    {
        get
        {
            return _EditedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("EditedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditedDateChanging(value);
            ReportPropertyChanging("EditedDate");
            _EditedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditedDate");
            OnEditedDateChanged();
        }
    }
    private global::System.DateTime _EditedDate;
    partial void OnEditedDateChanging(global::System.DateTime value);
    partial void OnEditedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid EditorUserID
    {
        get
        {
            return _EditorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditorUserIDChanging(value);
            ReportPropertyChanging("EditorUserID");
            _EditorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditorUserID");
            OnEditorUserIDChanged();
        }
    }
    private global::System.Guid _EditorUserID;
    partial void OnEditorUserIDChanging(global::System.Guid value);
    partial void OnEditorUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_GroupProjects_Projects", "Group_Projects")]
    public EntityCollection<Group_Projects> Group_Projects
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group_Projects>("Model_Namespace.FK_GroupProjects_Projects", "Group_Projects");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group_Projects>("Model_Namespace.FK_GroupProjects_Projects", "Group_Projects", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Projects_Perimeters", "Perimeter")]
    public EntityCollection<Perimeter> Perimeters
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Perimeter>("Model_Namespace.FK_Projects_Perimeters", "Perimeter");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Perimeter>("Model_Namespace.FK_Projects_Perimeters", "Perimeter", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Projects_ProjectOrganisms", "Project_Organisms")]
    public EntityCollection<Project_Organisms> Project_Organisms
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project_Organisms>("Model_Namespace.FK_Projects_ProjectOrganisms", "Project_Organisms");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project_Organisms>("Model_Namespace.FK_Projects_ProjectOrganisms", "Project_Organisms", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Projects_ProjectInfo", "ProjectInfo")]
    public EntityCollection<ProjectInfo> ProjectInfoes
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectInfo>("Model_Namespace.FK_Projects_ProjectInfo", "ProjectInfo");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectInfo>("Model_Namespace.FK_Projects_ProjectInfo", "ProjectInfo", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Projects_ProjectInfoTreeLocation", "ProjectInfoTreeLocation")]
    public EntityCollection<ProjectInfoTreeLocation> ProjectInfoTreeLocations
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectInfoTreeLocation>("Model_Namespace.FK_Projects_ProjectInfoTreeLocation", "ProjectInfoTreeLocation");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectInfoTreeLocation>("Model_Namespace.FK_Projects_ProjectInfoTreeLocation", "ProjectInfoTreeLocation", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Project_Organisms")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Project_Organisms : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Project_Organisms object.
    /// </summary>
    /// <param name="projectOrganismID">Initial value of the ProjectOrganismID property.</param>
    /// <param name="organismID">Initial value of the OrganismID property.</param>
    /// <param name="projectID">Initial value of the ProjectID property.</param>
    /// <param name="createdDate">Initial value of the CreatedDate property.</param>
    /// <param name="creatorUserID">Initial value of the CreatorUserID property.</param>
    /// <param name="editedDate">Initial value of the EditedDate property.</param>
    /// <param name="editorUserID">Initial value of the EditorUserID property.</param>
    public static Project_Organisms CreateProject_Organisms(global::System.Int32 projectOrganismID, global::System.Int32 organismID, global::System.Int32 projectID, global::System.DateTime createdDate, global::System.Guid creatorUserID, global::System.DateTime editedDate, global::System.Guid editorUserID)
    {
        Project_Organisms project_Organisms = new Project_Organisms();
        project_Organisms.ProjectOrganismID = projectOrganismID;
        project_Organisms.OrganismID = organismID;
        project_Organisms.ProjectID = projectID;
        project_Organisms.CreatedDate = createdDate;
        project_Organisms.CreatorUserID = creatorUserID;
        project_Organisms.EditedDate = editedDate;
        project_Organisms.EditorUserID = editorUserID;
        return project_Organisms;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ProjectOrganismID
    {
        get
        {
            return _ProjectOrganismID;
        }
        set
        {
            if (_ProjectOrganismID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("ProjectOrganismID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnProjectOrganismIDChanging(value);
                ReportPropertyChanging("ProjectOrganismID");
                _ProjectOrganismID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectOrganismID");
                OnProjectOrganismIDChanged();
            }
        }
    }
    private global::System.Int32 _ProjectOrganismID;
    partial void OnProjectOrganismIDChanging(global::System.Int32 value);
    partial void OnProjectOrganismIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 OrganismID
    {
        get
        {
            return _OrganismID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("OrganismID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnOrganismIDChanging(value);
            ReportPropertyChanging("OrganismID");
            _OrganismID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("OrganismID");
            OnOrganismIDChanged();
        }
    }
    private global::System.Int32 _OrganismID;
    partial void OnOrganismIDChanging(global::System.Int32 value);
    partial void OnOrganismIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ProjectID
    {
        get
        {
            return _ProjectID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ProjectID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnProjectIDChanging(value);
            ReportPropertyChanging("ProjectID");
            _ProjectID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ProjectID");
            OnProjectIDChanged();
        }
    }
    private global::System.Int32 _ProjectID;
    partial void OnProjectIDChanging(global::System.Int32 value);
    partial void OnProjectIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime CreatedDate
    {
        get
        {
            return _CreatedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CreatedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatedDateChanging(value);
            ReportPropertyChanging("CreatedDate");
            _CreatedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedDate");
            OnCreatedDateChanged();
        }
    }
    private global::System.DateTime _CreatedDate;
    partial void OnCreatedDateChanging(global::System.DateTime value);
    partial void OnCreatedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid CreatorUserID
    {
        get
        {
            return _CreatorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatorUserIDChanging(value);
            ReportPropertyChanging("CreatorUserID");
            _CreatorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatorUserID");
            OnCreatorUserIDChanged();
        }
    }
    private global::System.Guid _CreatorUserID;
    partial void OnCreatorUserIDChanging(global::System.Guid value);
    partial void OnCreatorUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime EditedDate
    {
        get
        {
            return _EditedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("EditedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditedDateChanging(value);
            ReportPropertyChanging("EditedDate");
            _EditedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditedDate");
            OnEditedDateChanged();
        }
    }
    private global::System.DateTime _EditedDate;
    partial void OnEditedDateChanging(global::System.DateTime value);
    partial void OnEditedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid EditorUserID
    {
        get
        {
            return _EditorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditorUserIDChanging(value);
            ReportPropertyChanging("EditorUserID");
            _EditorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditorUserID");
            OnEditorUserIDChanged();
        }
    }
    private global::System.Guid _EditorUserID;
    partial void OnEditorUserIDChanging(global::System.Guid value);
    partial void OnEditorUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Organisms_ProjectOrganisms", "Organism")]
    public Organism Organism
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organism>("Model_Namespace.FK_Organisms_ProjectOrganisms", "Organism").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organism>("Model_Namespace.FK_Organisms_ProjectOrganisms", "Organism").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Organism> OrganismReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organism>("Model_Namespace.FK_Organisms_ProjectOrganisms", "Organism");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organism>("Model_Namespace.FK_Organisms_ProjectOrganisms", "Organism", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Project_Organisms_TreeDetails", "TreeDetail")]
    public EntityCollection<TreeDetail> TreeDetails
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TreeDetail>("Model_Namespace.FK_Project_Organisms_TreeDetails", "TreeDetail");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TreeDetail>("Model_Namespace.FK_Project_Organisms_TreeDetails", "TreeDetail", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Projects_ProjectOrganisms", "Project")]
    public Project Project
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_Projects_ProjectOrganisms", "Project").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_Projects_ProjectOrganisms", "Project").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Project> ProjectReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_Projects_ProjectOrganisms", "Project");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("Model_Namespace.FK_Projects_ProjectOrganisms", "Project", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="ProjectInfo")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class ProjectInfo : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new ProjectInfo object.
    /// </summary>
    /// <param name="projectInfoID">Initial value of the ProjectInfoID property.</param>
    /// <param name="projectID">Initial value of the ProjectID property.</param>
    /// <param name="projectName">Initial value of the ProjectName property.</param>
    public static ProjectInfo CreateProjectInfo(global::System.Int32 projectInfoID, global::System.Int32 projectID, global::System.String projectName)
    {
        ProjectInfo projectInfo = new ProjectInfo();
        projectInfo.ProjectInfoID = projectInfoID;
        projectInfo.ProjectID = projectID;
        projectInfo.ProjectName = projectName;
        return projectInfo;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ProjectInfoID
    {
        get
        {
            return _ProjectInfoID;
        }
        set
        {
            if (_ProjectInfoID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("ProjectInfoID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnProjectInfoIDChanging(value);
                ReportPropertyChanging("ProjectInfoID");
                _ProjectInfoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectInfoID");
                OnProjectInfoIDChanged();
            }
        }
    }
    private global::System.Int32 _ProjectInfoID;
    partial void OnProjectInfoIDChanging(global::System.Int32 value);
    partial void OnProjectInfoIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ProjectID
    {
        get
        {
            return _ProjectID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ProjectID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnProjectIDChanging(value);
            ReportPropertyChanging("ProjectID");
            _ProjectID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ProjectID");
            OnProjectIDChanged();
        }
    }
    private global::System.Int32 _ProjectID;
    partial void OnProjectIDChanging(global::System.Int32 value);
    partial void OnProjectIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String ProjectName
    {
        get
        {
            return _ProjectName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ProjectName");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("ProjectName");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnProjectNameChanging(value);
            ReportPropertyChanging("ProjectName");
            _ProjectName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("ProjectName");
            OnProjectNameChanged();
        }
    }
    private global::System.String _ProjectName;
    partial void OnProjectNameChanging(global::System.String value);
    partial void OnProjectNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Address1
    {
        get
        {
            return _Address1;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Address1");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnAddress1Changing(value);
            ReportPropertyChanging("Address1");
            _Address1 = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Address1");
            OnAddress1Changed();
        }
    }
    private global::System.String _Address1;
    partial void OnAddress1Changing(global::System.String value);
    partial void OnAddress1Changed();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Address2
    {
        get
        {
            return _Address2;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Address2");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnAddress2Changing(value);
            ReportPropertyChanging("Address2");
            _Address2 = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Address2");
            OnAddress2Changed();
        }
    }
    private global::System.String _Address2;
    partial void OnAddress2Changing(global::System.String value);
    partial void OnAddress2Changed();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> CityID
    {
        get
        {
            return _CityID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CityID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCityIDChanging(value);
            ReportPropertyChanging("CityID");
            _CityID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CityID");
            OnCityIDChanged();
        }
    }
    private Nullable<global::System.Int32> _CityID;
    partial void OnCityIDChanging(Nullable<global::System.Int32> value);
    partial void OnCityIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String State
    {
        get
        {
            return _State;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("State");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnStateChanging(value);
            ReportPropertyChanging("State");
            _State = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("State");
            OnStateChanged();
        }
    }
    private global::System.String _State;
    partial void OnStateChanging(global::System.String value);
    partial void OnStateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String ZipCode
    {
        get
        {
            return _ZipCode;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ZipCode");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnZipCodeChanging(value);
            ReportPropertyChanging("ZipCode");
            _ZipCode = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("ZipCode");
            OnZipCodeChanged();
        }
    }
    private global::System.String _ZipCode;
    partial void OnZipCodeChanging(global::System.String value);
    partial void OnZipCodeChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Client
    {
        get
        {
            return _Client;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Client");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnClientChanging(value);
            ReportPropertyChanging("Client");
            _Client = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Client");
            OnClientChanged();
        }
    }
    private global::System.String _Client;
    partial void OnClientChanging(global::System.String value);
    partial void OnClientChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Description
    {
        get
        {
            return _Description;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Description");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnDescriptionChanging(value);
            ReportPropertyChanging("Description");
            _Description = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Description");
            OnDescriptionChanged();
        }
    }
    private global::System.String _Description;
    partial void OnDescriptionChanging(global::System.String value);
    partial void OnDescriptionChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Comments
    {
        get
        {
            return _Comments;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Comments");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCommentsChanging(value);
            ReportPropertyChanging("Comments");
            _Comments = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Comments");
            OnCommentsChanged();
        }
    }
    private global::System.String _Comments;
    partial void OnCommentsChanging(global::System.String value);
    partial void OnCommentsChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> EditedDate
    {
        get
        {
            return _EditedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("EditedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditedDateChanging(value);
            ReportPropertyChanging("EditedDate");
            _EditedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditedDate");
            OnEditedDateChanged();
        }
    }
    private Nullable<global::System.DateTime> _EditedDate;
    partial void OnEditedDateChanging(Nullable<global::System.DateTime> value);
    partial void OnEditedDateChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_ProjectInfo_City", "City")]
    public City City
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("Model_Namespace.FK_ProjectInfo_City", "City").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("Model_Namespace.FK_ProjectInfo_City", "City").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<City> CityReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("Model_Namespace.FK_ProjectInfo_City", "City");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("Model_Namespace.FK_ProjectInfo_City", "City", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Projects_ProjectInfo", "Project")]
    public Project Project
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_Projects_ProjectInfo", "Project").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_Projects_ProjectInfo", "Project").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Project> ProjectReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_Projects_ProjectInfo", "Project");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("Model_Namespace.FK_Projects_ProjectInfo", "Project", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="ProjectInfoTreeLocation")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class ProjectInfoTreeLocation : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new ProjectInfoTreeLocation object.
    /// </summary>
    /// <param name="projectInfoTreeLocationID">Initial value of the ProjectInfoTreeLocationID property.</param>
    /// <param name="projectID">Initial value of the ProjectID property.</param>
    public static ProjectInfoTreeLocation CreateProjectInfoTreeLocation(global::System.Int32 projectInfoTreeLocationID, global::System.Int32 projectID)
    {
        ProjectInfoTreeLocation projectInfoTreeLocation = new ProjectInfoTreeLocation();
        projectInfoTreeLocation.ProjectInfoTreeLocationID = projectInfoTreeLocationID;
        projectInfoTreeLocation.ProjectID = projectID;
        return projectInfoTreeLocation;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ProjectInfoTreeLocationID
    {
        get
        {
            return _ProjectInfoTreeLocationID;
        }
        set
        {
            if (_ProjectInfoTreeLocationID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("ProjectInfoTreeLocationID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnProjectInfoTreeLocationIDChanging(value);
                ReportPropertyChanging("ProjectInfoTreeLocationID");
                _ProjectInfoTreeLocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectInfoTreeLocationID");
                OnProjectInfoTreeLocationIDChanged();
            }
        }
    }
    private global::System.Int32 _ProjectInfoTreeLocationID;
    partial void OnProjectInfoTreeLocationIDChanging(global::System.Int32 value);
    partial void OnProjectInfoTreeLocationIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ProjectID
    {
        get
        {
            return _ProjectID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ProjectID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnProjectIDChanging(value);
            ReportPropertyChanging("ProjectID");
            _ProjectID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ProjectID");
            OnProjectIDChanged();
        }
    }
    private global::System.Int32 _ProjectID;
    partial void OnProjectIDChanging(global::System.Int32 value);
    partial void OnProjectIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Decimal> Y
    {
        get
        {
            return _Y;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnYChanging(value);
            ReportPropertyChanging("Y");
            _Y = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Y");
            OnYChanged();
        }
    }
    private Nullable<global::System.Decimal> _Y;
    partial void OnYChanging(Nullable<global::System.Decimal> value);
    partial void OnYChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Decimal> X
    {
        get
        {
            return _X;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnXChanging(value);
            ReportPropertyChanging("X");
            _X = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("X");
            OnXChanged();
        }
    }
    private Nullable<global::System.Decimal> _X;
    partial void OnXChanging(Nullable<global::System.Decimal> value);
    partial void OnXChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Decimal> Lat
    {
        get
        {
            return _Lat;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLatChanging(value);
            ReportPropertyChanging("Lat");
            _Lat = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Lat");
            OnLatChanged();
        }
    }
    private Nullable<global::System.Decimal> _Lat;
    partial void OnLatChanging(Nullable<global::System.Decimal> value);
    partial void OnLatChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Decimal> Lon
    {
        get
        {
            return _Lon;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLonChanging(value);
            ReportPropertyChanging("Lon");
            _Lon = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Lon");
            OnLonChanged();
        }
    }
    private Nullable<global::System.Decimal> _Lon;
    partial void OnLonChanging(Nullable<global::System.Decimal> value);
    partial void OnLonChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> Parkings
    {
        get
        {
            return _Parkings;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Parkings");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnParkingsChanging(value);
            ReportPropertyChanging("Parkings");
            _Parkings = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Parkings");
            OnParkingsChanged();
        }
    }
    private Nullable<global::System.Int32> _Parkings;
    partial void OnParkingsChanging(Nullable<global::System.Int32> value);
    partial void OnParkingsChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Decimal> Acres
    {
        get
        {
            return _Acres;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnAcresChanging(value);
            ReportPropertyChanging("Acres");
            _Acres = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Acres");
            OnAcresChanged();
        }
    }
    private Nullable<global::System.Decimal> _Acres;
    partial void OnAcresChanging(Nullable<global::System.Decimal> value);
    partial void OnAcresChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> DistanceBetweenTrees
    {
        get
        {
            return _DistanceBetweenTrees;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("DistanceBetweenTrees");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnDistanceBetweenTreesChanging(value);
            ReportPropertyChanging("DistanceBetweenTrees");
            _DistanceBetweenTrees = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DistanceBetweenTrees");
            OnDistanceBetweenTreesChanged();
        }
    }
    private Nullable<global::System.Int32> _DistanceBetweenTrees;
    partial void OnDistanceBetweenTreesChanging(Nullable<global::System.Int32> value);
    partial void OnDistanceBetweenTreesChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> Lots0
    {
        get
        {
            return _Lots0;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Lots0");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLots0Changing(value);
            ReportPropertyChanging("Lots0");
            _Lots0 = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Lots0");
            OnLots0Changed();
        }
    }
    private Nullable<global::System.Int32> _Lots0;
    partial void OnLots0Changing(Nullable<global::System.Int32> value);
    partial void OnLots0Changed();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> Lots1
    {
        get
        {
            return _Lots1;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Lots1");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLots1Changing(value);
            ReportPropertyChanging("Lots1");
            _Lots1 = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Lots1");
            OnLots1Changed();
        }
    }
    private Nullable<global::System.Int32> _Lots1;
    partial void OnLots1Changing(Nullable<global::System.Int32> value);
    partial void OnLots1Changed();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> Lots2
    {
        get
        {
            return _Lots2;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Lots2");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLots2Changing(value);
            ReportPropertyChanging("Lots2");
            _Lots2 = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Lots2");
            OnLots2Changed();
        }
    }
    private Nullable<global::System.Int32> _Lots2;
    partial void OnLots2Changing(Nullable<global::System.Int32> value);
    partial void OnLots2Changed();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> Lots3
    {
        get
        {
            return _Lots3;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Lots3");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLots3Changing(value);
            ReportPropertyChanging("Lots3");
            _Lots3 = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Lots3");
            OnLots3Changed();
        }
    }
    private Nullable<global::System.Int32> _Lots3;
    partial void OnLots3Changing(Nullable<global::System.Int32> value);
    partial void OnLots3Changed();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Boolean> SocialInterest
    {
        get
        {
            return _SocialInterest;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnSocialInterestChanging(value);
            ReportPropertyChanging("SocialInterest");
            _SocialInterest = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("SocialInterest");
            OnSocialInterestChanged();
        }
    }
    private Nullable<global::System.Boolean> _SocialInterest;
    partial void OnSocialInterestChanging(Nullable<global::System.Boolean> value);
    partial void OnSocialInterestChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> Mitigation
    {
        get
        {
            return _Mitigation;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Mitigation");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnMitigationChanging(value);
            ReportPropertyChanging("Mitigation");
            _Mitigation = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Mitigation");
            OnMitigationChanged();
        }
    }
    private Nullable<global::System.Int32> _Mitigation;
    partial void OnMitigationChanging(Nullable<global::System.Int32> value);
    partial void OnMitigationChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Boolean> PreviouslyImpacted
    {
        get
        {
            return _PreviouslyImpacted;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnPreviouslyImpactedChanging(value);
            ReportPropertyChanging("PreviouslyImpacted");
            _PreviouslyImpacted = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("PreviouslyImpacted");
            OnPreviouslyImpactedChanged();
        }
    }
    private Nullable<global::System.Boolean> _PreviouslyImpacted;
    partial void OnPreviouslyImpactedChanging(Nullable<global::System.Boolean> value);
    partial void OnPreviouslyImpactedChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Projects_ProjectInfoTreeLocation", "Project")]
    public Project Project
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_Projects_ProjectInfoTreeLocation", "Project").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_Projects_ProjectInfoTreeLocation", "Project").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Project> ProjectReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Model_Namespace.FK_Projects_ProjectInfoTreeLocation", "Project");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("Model_Namespace.FK_Projects_ProjectInfoTreeLocation", "Project", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Rep")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Rep : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Rep object.
    /// </summary>
    /// <param name="repID">Initial value of the RepID property.</param>
    /// <param name="repName">Initial value of the RepName property.</param>
    public static Rep CreateRep(global::System.Int32 repID, global::System.String repName)
    {
        Rep rep = new Rep();
        rep.RepID = repID;
        rep.RepName = repName;
        return rep;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 RepID
    {
        get
        {
            return _RepID;
        }
        set
        {
            if (_RepID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("RepID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnRepIDChanging(value);
                ReportPropertyChanging("RepID");
                _RepID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepID");
                OnRepIDChanged();
            }
        }
    }
    private global::System.Int32 _RepID;
    partial void OnRepIDChanging(global::System.Int32 value);
    partial void OnRepIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String RepName
    {
        get
        {
            return _RepName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("RepName");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("RepName");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnRepNameChanging(value);
            ReportPropertyChanging("RepName");
            _RepName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("RepName");
            OnRepNameChanged();
        }
    }
    private global::System.String _RepName;
    partial void OnRepNameChanging(global::System.String value);
    partial void OnRepNameChanged();

    #endregion


}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Role")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Role : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Role object.
    /// </summary>
    /// <param name="roleID">Initial value of the RoleID property.</param>
    /// <param name="roleName">Initial value of the RoleName property.</param>
    public static Role CreateRole(global::System.Int32 roleID, global::System.String roleName)
    {
        Role role = new Role();
        role.RoleID = roleID;
        role.RoleName = roleName;
        return role;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 RoleID
    {
        get
        {
            return _RoleID;
        }
        set
        {
            if (_RoleID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("RoleID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
    }
    private global::System.Int32 _RoleID;
    partial void OnRoleIDChanging(global::System.Int32 value);
    partial void OnRoleIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String RoleName
    {
        get
        {
            return _RoleName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("RoleName");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("RoleName");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnRoleNameChanging(value);
            ReportPropertyChanging("RoleName");
            _RoleName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("RoleName");
            OnRoleNameChanged();
        }
    }
    private global::System.String _RoleName;
    partial void OnRoleNameChanging(global::System.String value);
    partial void OnRoleNameChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_RoleUsers_Roles", "Role_Users")]
    public EntityCollection<Role_Users> Role_Users
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role_Users>("Model_Namespace.FK_RoleUsers_Roles", "Role_Users");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role_Users>("Model_Namespace.FK_RoleUsers_Roles", "Role_Users", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Role_Users")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Role_Users : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Role_Users object.
    /// </summary>
    /// <param name="roleUserID">Initial value of the RoleUserID property.</param>
    /// <param name="roleID">Initial value of the RoleID property.</param>
    /// <param name="userID">Initial value of the UserID property.</param>
    public static Role_Users CreateRole_Users(global::System.Int32 roleUserID, global::System.Int32 roleID, global::System.Guid userID)
    {
        Role_Users role_Users = new Role_Users();
        role_Users.RoleUserID = roleUserID;
        role_Users.RoleID = roleID;
        role_Users.UserID = userID;
        return role_Users;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 RoleUserID
    {
        get
        {
            return _RoleUserID;
        }
        set
        {
            if (_RoleUserID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("RoleUserID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnRoleUserIDChanging(value);
                ReportPropertyChanging("RoleUserID");
                _RoleUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleUserID");
                OnRoleUserIDChanged();
            }
        }
    }
    private global::System.Int32 _RoleUserID;
    partial void OnRoleUserIDChanging(global::System.Int32 value);
    partial void OnRoleUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 RoleID
    {
        get
        {
            return _RoleID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("RoleID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnRoleIDChanging(value);
            ReportPropertyChanging("RoleID");
            _RoleID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("RoleID");
            OnRoleIDChanged();
        }
    }
    private global::System.Int32 _RoleID;
    partial void OnRoleIDChanging(global::System.Int32 value);
    partial void OnRoleIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid UserID
    {
        get
        {
            return _UserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnUserIDChanging(value);
            ReportPropertyChanging("UserID");
            _UserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("UserID");
            OnUserIDChanged();
        }
    }
    private global::System.Guid _UserID;
    partial void OnUserIDChanging(global::System.Guid value);
    partial void OnUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_RoleUsers_Roles", "Role")]
    public Role Role
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Model_Namespace.FK_RoleUsers_Roles", "Role").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Model_Namespace.FK_RoleUsers_Roles", "Role").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Role> RoleReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Model_Namespace.FK_RoleUsers_Roles", "Role");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("Model_Namespace.FK_RoleUsers_Roles", "Role", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_RoleUsers_Users", "User")]
    public User User
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model_Namespace.FK_RoleUsers_Users", "User").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model_Namespace.FK_RoleUsers_Users", "User").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<User> UserReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model_Namespace.FK_RoleUsers_Users", "User");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model_Namespace.FK_RoleUsers_Users", "User", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="ScientificName")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class ScientificName : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new ScientificName object.
    /// </summary>
    /// <param name="scientificNameID">Initial value of the ScientificNameID property.</param>
    /// <param name="scientificNameDesc">Initial value of the ScientificNameDesc property.</param>
    /// <param name="createdDate">Initial value of the CreatedDate property.</param>
    /// <param name="creatorUserID">Initial value of the CreatorUserID property.</param>
    /// <param name="editedDate">Initial value of the EditedDate property.</param>
    /// <param name="editorUserID">Initial value of the EditorUserID property.</param>
    public static ScientificName CreateScientificName(global::System.Int32 scientificNameID, global::System.String scientificNameDesc, global::System.DateTime createdDate, global::System.Guid creatorUserID, global::System.DateTime editedDate, global::System.Guid editorUserID)
    {
        ScientificName scientificName = new ScientificName();
        scientificName.ScientificNameID = scientificNameID;
        scientificName.ScientificNameDesc = scientificNameDesc;
        scientificName.CreatedDate = createdDate;
        scientificName.CreatorUserID = creatorUserID;
        scientificName.EditedDate = editedDate;
        scientificName.EditorUserID = editorUserID;
        return scientificName;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ScientificNameID
    {
        get
        {
            return _ScientificNameID;
        }
        set
        {
            if (_ScientificNameID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("ScientificNameID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnScientificNameIDChanging(value);
                ReportPropertyChanging("ScientificNameID");
                _ScientificNameID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScientificNameID");
                OnScientificNameIDChanged();
            }
        }
    }
    private global::System.Int32 _ScientificNameID;
    partial void OnScientificNameIDChanging(global::System.Int32 value);
    partial void OnScientificNameIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String ScientificNameDesc
    {
        get
        {
            return _ScientificNameDesc;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ScientificNameDesc");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("ScientificNameDesc");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnScientificNameDescChanging(value);
            ReportPropertyChanging("ScientificNameDesc");
            _ScientificNameDesc = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("ScientificNameDesc");
            OnScientificNameDescChanged();
        }
    }
    private global::System.String _ScientificNameDesc;
    partial void OnScientificNameDescChanging(global::System.String value);
    partial void OnScientificNameDescChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime CreatedDate
    {
        get
        {
            return _CreatedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CreatedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatedDateChanging(value);
            ReportPropertyChanging("CreatedDate");
            _CreatedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedDate");
            OnCreatedDateChanged();
        }
    }
    private global::System.DateTime _CreatedDate;
    partial void OnCreatedDateChanging(global::System.DateTime value);
    partial void OnCreatedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid CreatorUserID
    {
        get
        {
            return _CreatorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatorUserIDChanging(value);
            ReportPropertyChanging("CreatorUserID");
            _CreatorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatorUserID");
            OnCreatorUserIDChanged();
        }
    }
    private global::System.Guid _CreatorUserID;
    partial void OnCreatorUserIDChanging(global::System.Guid value);
    partial void OnCreatorUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime EditedDate
    {
        get
        {
            return _EditedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("EditedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditedDateChanging(value);
            ReportPropertyChanging("EditedDate");
            _EditedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditedDate");
            OnEditedDateChanged();
        }
    }
    private global::System.DateTime _EditedDate;
    partial void OnEditedDateChanging(global::System.DateTime value);
    partial void OnEditedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid EditorUserID
    {
        get
        {
            return _EditorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditorUserIDChanging(value);
            ReportPropertyChanging("EditorUserID");
            _EditorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditorUserID");
            OnEditorUserIDChanged();
        }
    }
    private global::System.Guid _EditorUserID;
    partial void OnEditorUserIDChanging(global::System.Guid value);
    partial void OnEditorUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Organisms_ScientificNames", "Organism")]
    public EntityCollection<Organism> Organisms
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organism>("Model_Namespace.FK_Organisms_ScientificNames", "Organism");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organism>("Model_Namespace.FK_Organisms_ScientificNames", "Organism", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="TermsAndCondition")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class TermsAndCondition : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new TermsAndCondition object.
    /// </summary>
    /// <param name="termsAndConditionsID">Initial value of the TermsAndConditionsID property.</param>
    /// <param name="termsAndConditionsInnerText">Initial value of the TermsAndConditionsInnerText property.</param>
    /// <param name="createdDate">Initial value of the CreatedDate property.</param>
    public static TermsAndCondition CreateTermsAndCondition(global::System.Int32 termsAndConditionsID, global::System.String termsAndConditionsInnerText, global::System.DateTime createdDate)
    {
        TermsAndCondition termsAndCondition = new TermsAndCondition();
        termsAndCondition.TermsAndConditionsID = termsAndConditionsID;
        termsAndCondition.TermsAndConditionsInnerText = termsAndConditionsInnerText;
        termsAndCondition.CreatedDate = createdDate;
        return termsAndCondition;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 TermsAndConditionsID
    {
        get
        {
            return _TermsAndConditionsID;
        }
        set
        {
            if (_TermsAndConditionsID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("TermsAndConditionsID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnTermsAndConditionsIDChanging(value);
                ReportPropertyChanging("TermsAndConditionsID");
                _TermsAndConditionsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TermsAndConditionsID");
                OnTermsAndConditionsIDChanged();
            }
        }
    }
    private global::System.Int32 _TermsAndConditionsID;
    partial void OnTermsAndConditionsIDChanging(global::System.Int32 value);
    partial void OnTermsAndConditionsIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String TermsAndConditionsInnerText
    {
        get
        {
            return _TermsAndConditionsInnerText;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("TermsAndConditionsInnerText");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("TermsAndConditionsInnerText");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnTermsAndConditionsInnerTextChanging(value);
            ReportPropertyChanging("TermsAndConditionsInnerText");
            _TermsAndConditionsInnerText = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("TermsAndConditionsInnerText");
            OnTermsAndConditionsInnerTextChanged();
        }
    }
    private global::System.String _TermsAndConditionsInnerText;
    partial void OnTermsAndConditionsInnerTextChanging(global::System.String value);
    partial void OnTermsAndConditionsInnerTextChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime CreatedDate
    {
        get
        {
            return _CreatedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CreatedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatedDateChanging(value);
            ReportPropertyChanging("CreatedDate");
            _CreatedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedDate");
            OnCreatedDateChanged();
        }
    }
    private global::System.DateTime _CreatedDate;
    partial void OnCreatedDateChanging(global::System.DateTime value);
    partial void OnCreatedDateChanged();

    #endregion


}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="Token")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Token : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new Token object.
    /// </summary>
    /// <param name="tokenID">Initial value of the TokenID property.</param>
    /// <param name="deviceID">Initial value of the DeviceID property.</param>
    /// <param name="tokenKey">Initial value of the TokenKey property.</param>
    /// <param name="tokenTypeID">Initial value of the TokenTypeID property.</param>
    /// <param name="requestDate">Initial value of the RequestDate property.</param>
    /// <param name="expireDate">Initial value of the ExpireDate property.</param>
    public static Token CreateToken(global::System.Int32 tokenID, global::System.Int32 deviceID, global::System.Guid tokenKey, global::System.Int32 tokenTypeID, global::System.DateTime requestDate, global::System.DateTime expireDate)
    {
        Token token = new Token();
        token.TokenID = tokenID;
        token.DeviceID = deviceID;
        token.TokenKey = tokenKey;
        token.TokenTypeID = tokenTypeID;
        token.RequestDate = requestDate;
        token.ExpireDate = expireDate;
        return token;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 TokenID
    {
        get
        {
            return _TokenID;
        }
        set
        {
            if (_TokenID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("TokenID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnTokenIDChanging(value);
                ReportPropertyChanging("TokenID");
                _TokenID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TokenID");
                OnTokenIDChanged();
            }
        }
    }
    private global::System.Int32 _TokenID;
    partial void OnTokenIDChanging(global::System.Int32 value);
    partial void OnTokenIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 DeviceID
    {
        get
        {
            return _DeviceID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("DeviceID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnDeviceIDChanging(value);
            ReportPropertyChanging("DeviceID");
            _DeviceID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DeviceID");
            OnDeviceIDChanged();
        }
    }
    private global::System.Int32 _DeviceID;
    partial void OnDeviceIDChanging(global::System.Int32 value);
    partial void OnDeviceIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid TokenKey
    {
        get
        {
            return _TokenKey;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnTokenKeyChanging(value);
            ReportPropertyChanging("TokenKey");
            _TokenKey = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("TokenKey");
            OnTokenKeyChanged();
        }
    }
    private global::System.Guid _TokenKey;
    partial void OnTokenKeyChanging(global::System.Guid value);
    partial void OnTokenKeyChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> UserID
    {
        get
        {
            return _UserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnUserIDChanging(value);
            ReportPropertyChanging("UserID");
            _UserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("UserID");
            OnUserIDChanged();
        }
    }
    private Nullable<global::System.Guid> _UserID;
    partial void OnUserIDChanging(Nullable<global::System.Guid> value);
    partial void OnUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> RequestTokenKey
    {
        get
        {
            return _RequestTokenKey;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnRequestTokenKeyChanging(value);
            ReportPropertyChanging("RequestTokenKey");
            _RequestTokenKey = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("RequestTokenKey");
            OnRequestTokenKeyChanged();
        }
    }
    private Nullable<global::System.Guid> _RequestTokenKey;
    partial void OnRequestTokenKeyChanging(Nullable<global::System.Guid> value);
    partial void OnRequestTokenKeyChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 TokenTypeID
    {
        get
        {
            return _TokenTypeID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("TokenTypeID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnTokenTypeIDChanging(value);
            ReportPropertyChanging("TokenTypeID");
            _TokenTypeID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("TokenTypeID");
            OnTokenTypeIDChanged();
        }
    }
    private global::System.Int32 _TokenTypeID;
    partial void OnTokenTypeIDChanging(global::System.Int32 value);
    partial void OnTokenTypeIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime RequestDate
    {
        get
        {
            return _RequestDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("RequestDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnRequestDateChanging(value);
            ReportPropertyChanging("RequestDate");
            _RequestDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("RequestDate");
            OnRequestDateChanged();
        }
    }
    private global::System.DateTime _RequestDate;
    partial void OnRequestDateChanging(global::System.DateTime value);
    partial void OnRequestDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime ExpireDate
    {
        get
        {
            return _ExpireDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ExpireDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnExpireDateChanging(value);
            ReportPropertyChanging("ExpireDate");
            _ExpireDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ExpireDate");
            OnExpireDateChanged();
        }
    }
    private global::System.DateTime _ExpireDate;
    partial void OnExpireDateChanging(global::System.DateTime value);
    partial void OnExpireDateChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Tokens_Device", "Device")]
    public Device Device
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("Model_Namespace.FK_Tokens_Device", "Device").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("Model_Namespace.FK_Tokens_Device", "Device").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Device> DeviceReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("Model_Namespace.FK_Tokens_Device", "Device");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("Model_Namespace.FK_Tokens_Device", "Device", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Tokens_TokenType", "TokenType")]
    public TokenType TokenType
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TokenType>("Model_Namespace.FK_Tokens_TokenType", "TokenType").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TokenType>("Model_Namespace.FK_Tokens_TokenType", "TokenType").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<TokenType> TokenTypeReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TokenType>("Model_Namespace.FK_Tokens_TokenType", "TokenType");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TokenType>("Model_Namespace.FK_Tokens_TokenType", "TokenType", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="TokenType")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class TokenType : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new TokenType object.
    /// </summary>
    /// <param name="tokenTypeID">Initial value of the TokenTypeID property.</param>
    /// <param name="tokenTypeName">Initial value of the TokenTypeName property.</param>
    public static TokenType CreateTokenType(global::System.Int32 tokenTypeID, global::System.String tokenTypeName)
    {
        TokenType tokenType = new TokenType();
        tokenType.TokenTypeID = tokenTypeID;
        tokenType.TokenTypeName = tokenTypeName;
        return tokenType;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 TokenTypeID
    {
        get
        {
            return _TokenTypeID;
        }
        set
        {
            if (_TokenTypeID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("TokenTypeID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnTokenTypeIDChanging(value);
                ReportPropertyChanging("TokenTypeID");
                _TokenTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TokenTypeID");
                OnTokenTypeIDChanged();
            }
        }
    }
    private global::System.Int32 _TokenTypeID;
    partial void OnTokenTypeIDChanging(global::System.Int32 value);
    partial void OnTokenTypeIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String TokenTypeName
    {
        get
        {
            return _TokenTypeName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("TokenTypeName");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("TokenTypeName");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnTokenTypeNameChanging(value);
            ReportPropertyChanging("TokenTypeName");
            _TokenTypeName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("TokenTypeName");
            OnTokenTypeNameChanged();
        }
    }
    private global::System.String _TokenTypeName;
    partial void OnTokenTypeNameChanging(global::System.String value);
    partial void OnTokenTypeNameChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Tokens_TokenType", "Token")]
    public EntityCollection<Token> Tokens
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Token>("Model_Namespace.FK_Tokens_TokenType", "Token");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Token>("Model_Namespace.FK_Tokens_TokenType", "Token", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="TreeDetail")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class TreeDetail : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new TreeDetail object.
    /// </summary>
    /// <param name="treeDetailsID">Initial value of the TreeDetailsID property.</param>
    /// <param name="projectOrganismID">Initial value of the ProjectOrganismID property.</param>
    /// <param name="dap">Initial value of the Dap property.</param>
    /// <param name="dap_Counter">Initial value of the Dap_Counter property.</param>
    /// <param name="littoral">Initial value of the Littoral property.</param>
    /// <param name="maritimeZone">Initial value of the MaritimeZone property.</param>
    /// <param name="createdDate">Initial value of the CreatedDate property.</param>
    /// <param name="creatorUserID">Initial value of the CreatorUserID property.</param>
    /// <param name="editedDate">Initial value of the EditedDate property.</param>
    /// <param name="editorUserID">Initial value of the EditorUserID property.</param>
    public static TreeDetail CreateTreeDetail(global::System.Int32 treeDetailsID, global::System.Int32 projectOrganismID, global::System.Decimal dap, global::System.Int32 dap_Counter, global::System.Boolean littoral, global::System.Boolean maritimeZone, global::System.DateTime createdDate, global::System.Guid creatorUserID, global::System.DateTime editedDate, global::System.Guid editorUserID)
    {
        TreeDetail treeDetail = new TreeDetail();
        treeDetail.TreeDetailsID = treeDetailsID;
        treeDetail.ProjectOrganismID = projectOrganismID;
        treeDetail.Dap = dap;
        treeDetail.Dap_Counter = dap_Counter;
        treeDetail.Littoral = littoral;
        treeDetail.MaritimeZone = maritimeZone;
        treeDetail.CreatedDate = createdDate;
        treeDetail.CreatorUserID = creatorUserID;
        treeDetail.EditedDate = editedDate;
        treeDetail.EditorUserID = editorUserID;
        return treeDetail;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 TreeDetailsID
    {
        get
        {
            return _TreeDetailsID;
        }
        set
        {
            if (_TreeDetailsID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("TreeDetailsID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnTreeDetailsIDChanging(value);
                ReportPropertyChanging("TreeDetailsID");
                _TreeDetailsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TreeDetailsID");
                OnTreeDetailsIDChanged();
            }
        }
    }
    private global::System.Int32 _TreeDetailsID;
    partial void OnTreeDetailsIDChanging(global::System.Int32 value);
    partial void OnTreeDetailsIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 ProjectOrganismID
    {
        get
        {
            return _ProjectOrganismID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ProjectOrganismID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnProjectOrganismIDChanging(value);
            ReportPropertyChanging("ProjectOrganismID");
            _ProjectOrganismID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ProjectOrganismID");
            OnProjectOrganismIDChanged();
        }
    }
    private global::System.Int32 _ProjectOrganismID;
    partial void OnProjectOrganismIDChanging(global::System.Int32 value);
    partial void OnProjectOrganismIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> Number
    {
        get
        {
            return _Number;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Number");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnNumberChanging(value);
            ReportPropertyChanging("Number");
            _Number = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Number");
            OnNumberChanged();
        }
    }
    private Nullable<global::System.Int32> _Number;
    partial void OnNumberChanging(Nullable<global::System.Int32> value);
    partial void OnNumberChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Decimal> Y
    {
        get
        {
            return _Y;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnYChanging(value);
            ReportPropertyChanging("Y");
            _Y = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Y");
            OnYChanged();
        }
    }
    private Nullable<global::System.Decimal> _Y;
    partial void OnYChanging(Nullable<global::System.Decimal> value);
    partial void OnYChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Decimal> X
    {
        get
        {
            return _X;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnXChanging(value);
            ReportPropertyChanging("X");
            _X = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("X");
            OnXChanged();
        }
    }
    private Nullable<global::System.Decimal> _X;
    partial void OnXChanging(Nullable<global::System.Decimal> value);
    partial void OnXChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Decimal> Lat
    {
        get
        {
            return _Lat;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLatChanging(value);
            ReportPropertyChanging("Lat");
            _Lat = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Lat");
            OnLatChanged();
        }
    }
    private Nullable<global::System.Decimal> _Lat;
    partial void OnLatChanging(Nullable<global::System.Decimal> value);
    partial void OnLatChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Decimal> Lon
    {
        get
        {
            return _Lon;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLonChanging(value);
            ReportPropertyChanging("Lon");
            _Lon = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Lon");
            OnLonChanged();
        }
    }
    private Nullable<global::System.Decimal> _Lon;
    partial void OnLonChanging(Nullable<global::System.Decimal> value);
    partial void OnLonChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Decimal> Height
    {
        get
        {
            return _Height;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnHeightChanging(value);
            ReportPropertyChanging("Height");
            _Height = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Height");
            OnHeightChanged();
        }
    }
    private Nullable<global::System.Decimal> _Height;
    partial void OnHeightChanging(Nullable<global::System.Decimal> value);
    partial void OnHeightChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Decimal Dap
    {
        get
        {
            return _Dap;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnDapChanging(value);
            ReportPropertyChanging("Dap");
            _Dap = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Dap");
            OnDapChanged();
        }
    }
    private global::System.Decimal _Dap;
    partial void OnDapChanging(global::System.Decimal value);
    partial void OnDapChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 Dap_Counter
    {
        get
        {
            return _Dap_Counter;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Dap_Counter");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnDap_CounterChanging(value);
            ReportPropertyChanging("Dap_Counter");
            _Dap_Counter = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Dap_Counter");
            OnDap_CounterChanged();
        }
    }
    private global::System.Int32 _Dap_Counter;
    partial void OnDap_CounterChanging(global::System.Int32 value);
    partial void OnDap_CounterChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> Varas
    {
        get
        {
            return _Varas;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Varas");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnVarasChanging(value);
            ReportPropertyChanging("Varas");
            _Varas = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Varas");
            OnVarasChanged();
        }
    }
    private Nullable<global::System.Int32> _Varas;
    partial void OnVarasChanging(Nullable<global::System.Int32> value);
    partial void OnVarasChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> ConditionID
    {
        get
        {
            return _ConditionID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ConditionID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnConditionIDChanging(value);
            ReportPropertyChanging("ConditionID");
            _ConditionID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ConditionID");
            OnConditionIDChanged();
        }
    }
    private Nullable<global::System.Int32> _ConditionID;
    partial void OnConditionIDChanging(Nullable<global::System.Int32> value);
    partial void OnConditionIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> ActionProposedID
    {
        get
        {
            return _ActionProposedID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ActionProposedID");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnActionProposedIDChanging(value);
            ReportPropertyChanging("ActionProposedID");
            _ActionProposedID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ActionProposedID");
            OnActionProposedIDChanged();
        }
    }
    private Nullable<global::System.Int32> _ActionProposedID;
    partial void OnActionProposedIDChanging(Nullable<global::System.Int32> value);
    partial void OnActionProposedIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Boolean Littoral
    {
        get
        {
            return _Littoral;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLittoralChanging(value);
            ReportPropertyChanging("Littoral");
            _Littoral = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Littoral");
            OnLittoralChanged();
        }
    }
    private global::System.Boolean _Littoral;
    partial void OnLittoralChanging(global::System.Boolean value);
    partial void OnLittoralChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Boolean MaritimeZone
    {
        get
        {
            return _MaritimeZone;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnMaritimeZoneChanging(value);
            ReportPropertyChanging("MaritimeZone");
            _MaritimeZone = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("MaritimeZone");
            OnMaritimeZoneChanged();
        }
    }
    private global::System.Boolean _MaritimeZone;
    partial void OnMaritimeZoneChanging(global::System.Boolean value);
    partial void OnMaritimeZoneChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Commentary
    {
        get
        {
            return _Commentary;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Commentary");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCommentaryChanging(value);
            ReportPropertyChanging("Commentary");
            _Commentary = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Commentary");
            OnCommentaryChanged();
        }
    }
    private global::System.String _Commentary;
    partial void OnCommentaryChanging(global::System.String value);
    partial void OnCommentaryChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime CreatedDate
    {
        get
        {
            return _CreatedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CreatedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatedDateChanging(value);
            ReportPropertyChanging("CreatedDate");
            _CreatedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedDate");
            OnCreatedDateChanged();
        }
    }
    private global::System.DateTime _CreatedDate;
    partial void OnCreatedDateChanging(global::System.DateTime value);
    partial void OnCreatedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid CreatorUserID
    {
        get
        {
            return _CreatorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatorUserIDChanging(value);
            ReportPropertyChanging("CreatorUserID");
            _CreatorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatorUserID");
            OnCreatorUserIDChanged();
        }
    }
    private global::System.Guid _CreatorUserID;
    partial void OnCreatorUserIDChanging(global::System.Guid value);
    partial void OnCreatorUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime EditedDate
    {
        get
        {
            return _EditedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("EditedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditedDateChanging(value);
            ReportPropertyChanging("EditedDate");
            _EditedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditedDate");
            OnEditedDateChanged();
        }
    }
    private global::System.DateTime _EditedDate;
    partial void OnEditedDateChanging(global::System.DateTime value);
    partial void OnEditedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid EditorUserID
    {
        get
        {
            return _EditorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditorUserIDChanging(value);
            ReportPropertyChanging("EditorUserID");
            _EditorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditorUserID");
            OnEditorUserIDChanged();
        }
    }
    private global::System.Guid _EditorUserID;
    partial void OnEditorUserIDChanging(global::System.Guid value);
    partial void OnEditorUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_TreeDetails_ActionProposed", "ActionProposed")]
    public ActionProposed ActionProposed
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionProposed>("Model_Namespace.FK_TreeDetails_ActionProposed", "ActionProposed").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionProposed>("Model_Namespace.FK_TreeDetails_ActionProposed", "ActionProposed").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<ActionProposed> ActionProposedReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionProposed>("Model_Namespace.FK_TreeDetails_ActionProposed", "ActionProposed");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActionProposed>("Model_Namespace.FK_TreeDetails_ActionProposed", "ActionProposed", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_TreeDetails_Condition", "Condition")]
    public Condition Condition
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Condition>("Model_Namespace.FK_TreeDetails_Condition", "Condition").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Condition>("Model_Namespace.FK_TreeDetails_Condition", "Condition").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Condition> ConditionReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Condition>("Model_Namespace.FK_TreeDetails_Condition", "Condition");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Condition>("Model_Namespace.FK_TreeDetails_Condition", "Condition", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_TreeDetails_Daps", "Dap")]
    public EntityCollection<Dap> Daps
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dap>("Model_Namespace.FK_TreeDetails_Daps", "Dap");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dap>("Model_Namespace.FK_TreeDetails_Daps", "Dap", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Project_Organisms_TreeDetails", "Project_Organisms")]
    public Project_Organisms Project_Organisms
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project_Organisms>("Model_Namespace.FK_Project_Organisms_TreeDetails", "Project_Organisms").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project_Organisms>("Model_Namespace.FK_Project_Organisms_TreeDetails", "Project_Organisms").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<Project_Organisms> Project_OrganismsReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project_Organisms>("Model_Namespace.FK_Project_Organisms_TreeDetails", "Project_Organisms");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project_Organisms>("Model_Namespace.FK_Project_Organisms_TreeDetails", "Project_Organisms", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="User")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class User : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new User object.
    /// </summary>
    /// <param name="userID">Initial value of the UserID property.</param>
    /// <param name="userName">Initial value of the UserName property.</param>
    /// <param name="password">Initial value of the Password property.</param>
    /// <param name="passwordQuestion">Initial value of the PasswordQuestion property.</param>
    /// <param name="passwordAnswer">Initial value of the PasswordAnswer property.</param>
    /// <param name="createdDate">Initial value of the CreatedDate property.</param>
    /// <param name="creatorUserID">Initial value of the CreatorUserID property.</param>
    /// <param name="editedDate">Initial value of the EditedDate property.</param>
    /// <param name="editorUserID">Initial value of the EditorUserID property.</param>
    public static User CreateUser(global::System.Guid userID, global::System.String userName, global::System.String password, global::System.String passwordQuestion, global::System.String passwordAnswer, global::System.DateTime createdDate, global::System.Guid creatorUserID, global::System.DateTime editedDate, global::System.Guid editorUserID)
    {
        User user = new User();
        user.UserID = userID;
        user.UserName = userName;
        user.Password = password;
        user.PasswordQuestion = passwordQuestion;
        user.PasswordAnswer = passwordAnswer;
        user.CreatedDate = createdDate;
        user.CreatorUserID = creatorUserID;
        user.EditedDate = editedDate;
        user.EditorUserID = editorUserID;
        return user;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid UserID
    {
        get
        {
            return _UserID;
        }
        set
        {
            if (_UserID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
    }
    private global::System.Guid _UserID;
    partial void OnUserIDChanging(global::System.Guid value);
    partial void OnUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String UserName
    {
        get
        {
            return _UserName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("UserName");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("UserName");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnUserNameChanging(value);
            ReportPropertyChanging("UserName");
            _UserName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("UserName");
            OnUserNameChanged();
        }
    }
    private global::System.String _UserName;
    partial void OnUserNameChanging(global::System.String value);
    partial void OnUserNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String Password
    {
        get
        {
            return _Password;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Password");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("Password");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnPasswordChanging(value);
            ReportPropertyChanging("Password");
            _Password = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("Password");
            OnPasswordChanged();
        }
    }
    private global::System.String _Password;
    partial void OnPasswordChanging(global::System.String value);
    partial void OnPasswordChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String PasswordQuestion
    {
        get
        {
            return _PasswordQuestion;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("PasswordQuestion");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("PasswordQuestion");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnPasswordQuestionChanging(value);
            ReportPropertyChanging("PasswordQuestion");
            _PasswordQuestion = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("PasswordQuestion");
            OnPasswordQuestionChanged();
        }
    }
    private global::System.String _PasswordQuestion;
    partial void OnPasswordQuestionChanging(global::System.String value);
    partial void OnPasswordQuestionChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String PasswordAnswer
    {
        get
        {
            return _PasswordAnswer;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("PasswordAnswer");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("PasswordAnswer");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnPasswordAnswerChanging(value);
            ReportPropertyChanging("PasswordAnswer");
            _PasswordAnswer = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("PasswordAnswer");
            OnPasswordAnswerChanged();
        }
    }
    private global::System.String _PasswordAnswer;
    partial void OnPasswordAnswerChanging(global::System.String value);
    partial void OnPasswordAnswerChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Comment
    {
        get
        {
            return _Comment;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Comment");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCommentChanging(value);
            ReportPropertyChanging("Comment");
            _Comment = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Comment");
            OnCommentChanged();
        }
    }
    private global::System.String _Comment;
    partial void OnCommentChanging(global::System.String value);
    partial void OnCommentChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> LastActivityDate
    {
        get
        {
            return _LastActivityDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("LastActivityDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLastActivityDateChanging(value);
            ReportPropertyChanging("LastActivityDate");
            _LastActivityDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("LastActivityDate");
            OnLastActivityDateChanged();
        }
    }
    private Nullable<global::System.DateTime> _LastActivityDate;
    partial void OnLastActivityDateChanging(Nullable<global::System.DateTime> value);
    partial void OnLastActivityDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> LastLoginDate
    {
        get
        {
            return _LastLoginDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("LastLoginDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLastLoginDateChanging(value);
            ReportPropertyChanging("LastLoginDate");
            _LastLoginDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("LastLoginDate");
            OnLastLoginDateChanged();
        }
    }
    private Nullable<global::System.DateTime> _LastLoginDate;
    partial void OnLastLoginDateChanging(Nullable<global::System.DateTime> value);
    partial void OnLastLoginDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> LastPasswordChangedDate
    {
        get
        {
            return _LastPasswordChangedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("LastPasswordChangedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLastPasswordChangedDateChanging(value);
            ReportPropertyChanging("LastPasswordChangedDate");
            _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("LastPasswordChangedDate");
            OnLastPasswordChangedDateChanged();
        }
    }
    private Nullable<global::System.DateTime> _LastPasswordChangedDate;
    partial void OnLastPasswordChangedDateChanging(Nullable<global::System.DateTime> value);
    partial void OnLastPasswordChangedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Boolean> IsApproved
    {
        get
        {
            return _IsApproved;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnIsApprovedChanging(value);
            ReportPropertyChanging("IsApproved");
            _IsApproved = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("IsApproved");
            OnIsApprovedChanged();
        }
    }
    private Nullable<global::System.Boolean> _IsApproved;
    partial void OnIsApprovedChanging(Nullable<global::System.Boolean> value);
    partial void OnIsApprovedChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Boolean> IsOnLine
    {
        get
        {
            return _IsOnLine;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnIsOnLineChanging(value);
            ReportPropertyChanging("IsOnLine");
            _IsOnLine = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("IsOnLine");
            OnIsOnLineChanged();
        }
    }
    private Nullable<global::System.Boolean> _IsOnLine;
    partial void OnIsOnLineChanging(Nullable<global::System.Boolean> value);
    partial void OnIsOnLineChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Boolean> IsLockedOut
    {
        get
        {
            return _IsLockedOut;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnIsLockedOutChanging(value);
            ReportPropertyChanging("IsLockedOut");
            _IsLockedOut = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("IsLockedOut");
            OnIsLockedOutChanged();
        }
    }
    private Nullable<global::System.Boolean> _IsLockedOut;
    partial void OnIsLockedOutChanging(Nullable<global::System.Boolean> value);
    partial void OnIsLockedOutChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Boolean> IsChangePassword
    {
        get
        {
            return _IsChangePassword;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnIsChangePasswordChanging(value);
            ReportPropertyChanging("IsChangePassword");
            _IsChangePassword = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("IsChangePassword");
            OnIsChangePasswordChanged();
        }
    }
    private Nullable<global::System.Boolean> _IsChangePassword;
    partial void OnIsChangePasswordChanging(Nullable<global::System.Boolean> value);
    partial void OnIsChangePasswordChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> LastLockedOutDate
    {
        get
        {
            return _LastLockedOutDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("LastLockedOutDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLastLockedOutDateChanging(value);
            ReportPropertyChanging("LastLockedOutDate");
            _LastLockedOutDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("LastLockedOutDate");
            OnLastLockedOutDateChanged();
        }
    }
    private Nullable<global::System.DateTime> _LastLockedOutDate;
    partial void OnLastLockedOutDateChanging(Nullable<global::System.DateTime> value);
    partial void OnLastLockedOutDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> FailedPasswordAttemptCount
    {
        get
        {
            return _FailedPasswordAttemptCount;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("FailedPasswordAttemptCount");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnFailedPasswordAttemptCountChanging(value);
            ReportPropertyChanging("FailedPasswordAttemptCount");
            _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("FailedPasswordAttemptCount");
            OnFailedPasswordAttemptCountChanged();
        }
    }
    private Nullable<global::System.Int32> _FailedPasswordAttemptCount;
    partial void OnFailedPasswordAttemptCountChanging(Nullable<global::System.Int32> value);
    partial void OnFailedPasswordAttemptCountChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> FailedPasswordAttemptWindowStart
    {
        get
        {
            return _FailedPasswordAttemptWindowStart;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("FailedPasswordAttemptWindowStart");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnFailedPasswordAttemptWindowStartChanging(value);
            ReportPropertyChanging("FailedPasswordAttemptWindowStart");
            _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("FailedPasswordAttemptWindowStart");
            OnFailedPasswordAttemptWindowStartChanged();
        }
    }
    private Nullable<global::System.DateTime> _FailedPasswordAttemptWindowStart;
    partial void OnFailedPasswordAttemptWindowStartChanging(Nullable<global::System.DateTime> value);
    partial void OnFailedPasswordAttemptWindowStartChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> FailedPasswordAnswerAttemptCount
    {
        get
        {
            return _FailedPasswordAnswerAttemptCount;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("FailedPasswordAnswerAttemptCount");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnFailedPasswordAnswerAttemptCountChanging(value);
            ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
            _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
            OnFailedPasswordAnswerAttemptCountChanged();
        }
    }
    private Nullable<global::System.Int32> _FailedPasswordAnswerAttemptCount;
    partial void OnFailedPasswordAnswerAttemptCountChanging(Nullable<global::System.Int32> value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> FailedPasswordAnswerAttemptWindowStart
    {
        get
        {
            return _FailedPasswordAnswerAttemptWindowStart;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("FailedPasswordAnswerAttemptWindowStart");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnFailedPasswordAnswerAttemptWindowStartChanging(value);
            ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
            _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
            OnFailedPasswordAnswerAttemptWindowStartChanged();
        }
    }
    private Nullable<global::System.DateTime> _FailedPasswordAnswerAttemptWindowStart;
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(Nullable<global::System.DateTime> value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime CreatedDate
    {
        get
        {
            return _CreatedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CreatedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatedDateChanging(value);
            ReportPropertyChanging("CreatedDate");
            _CreatedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedDate");
            OnCreatedDateChanged();
        }
    }
    private global::System.DateTime _CreatedDate;
    partial void OnCreatedDateChanging(global::System.DateTime value);
    partial void OnCreatedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid CreatorUserID
    {
        get
        {
            return _CreatorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCreatorUserIDChanging(value);
            ReportPropertyChanging("CreatorUserID");
            _CreatorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatorUserID");
            OnCreatorUserIDChanged();
        }
    }
    private global::System.Guid _CreatorUserID;
    partial void OnCreatorUserIDChanging(global::System.Guid value);
    partial void OnCreatorUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime EditedDate
    {
        get
        {
            return _EditedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("EditedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditedDateChanging(value);
            ReportPropertyChanging("EditedDate");
            _EditedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditedDate");
            OnEditedDateChanged();
        }
    }
    private global::System.DateTime _EditedDate;
    partial void OnEditedDateChanging(global::System.DateTime value);
    partial void OnEditedDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid EditorUserID
    {
        get
        {
            return _EditorUserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditorUserIDChanging(value);
            ReportPropertyChanging("EditorUserID");
            _EditorUserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditorUserID");
            OnEditorUserIDChanged();
        }
    }
    private global::System.Guid _EditorUserID;
    partial void OnEditorUserIDChanging(global::System.Guid value);
    partial void OnEditorUserIDChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_GroupsUsers_Users", "Group_Users")]
    public EntityCollection<Group_Users> Group_Users
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group_Users>("Model_Namespace.FK_GroupsUsers_Users", "Group_Users");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group_Users>("Model_Namespace.FK_GroupsUsers_Users", "Group_Users", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_NotificationUser_User", "Notification_User")]
    public EntityCollection<Notification_User> Notification_User
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notification_User>("Model_Namespace.FK_NotificationUser_User", "Notification_User");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notification_User>("Model_Namespace.FK_NotificationUser_User", "Notification_User", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_RoleUsers_Users", "Role_Users")]
    public EntityCollection<Role_Users> Role_Users
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role_Users>("Model_Namespace.FK_RoleUsers_Users", "Role_Users");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role_Users>("Model_Namespace.FK_RoleUsers_Users", "Role_Users", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Users_UserInfo", "UserInfo")]
    public EntityCollection<UserInfo> UserInfoes
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInfo>("Model_Namespace.FK_Users_UserInfo", "UserInfo");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInfo>("Model_Namespace.FK_Users_UserInfo", "UserInfo", value);
            }
        }
    }

    #endregion

}

/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="Model_Namespace", Name="UserInfo")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class UserInfo : EntityObject
{

	
    #region Factory Method

    /// <summary>
    /// Create a new UserInfo object.
    /// </summary>
    /// <param name="userInfoID">Initial value of the UserInfoID property.</param>
    /// <param name="userID">Initial value of the UserID property.</param>
    /// <param name="firstName">Initial value of the FirstName property.</param>
    /// <param name="lastName">Initial value of the LastName property.</param>
    public static UserInfo CreateUserInfo(global::System.Int32 userInfoID, global::System.Guid userID, global::System.String firstName, global::System.String lastName)
    {
        UserInfo userInfo = new UserInfo();
        userInfo.UserInfoID = userInfoID;
        userInfo.UserID = userID;
        userInfo.FirstName = firstName;
        userInfo.LastName = lastName;
        return userInfo;
    }

    #endregion

    #region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 UserInfoID
    {
        get
        {
            return _UserInfoID;
        }
        set
        {
            if (_UserInfoID != value)
            {
                //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
    			if (value.IsInvalidKey()) BusinessLayerHelper.ThrowErrorForInvalidDataKey("UserInfoID");
    
    
    			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
    			
    			OnUserInfoIDChanging(value);
                ReportPropertyChanging("UserInfoID");
                _UserInfoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserInfoID");
                OnUserInfoIDChanged();
            }
        }
    }
    private global::System.Int32 _UserInfoID;
    partial void OnUserInfoIDChanging(global::System.Int32 value);
    partial void OnUserInfoIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid UserID
    {
        get
        {
            return _UserID;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnUserIDChanging(value);
            ReportPropertyChanging("UserID");
            _UserID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("UserID");
            OnUserIDChanged();
        }
    }
    private global::System.Guid _UserID;
    partial void OnUserIDChanging(global::System.Guid value);
    partial void OnUserIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String FirstName
    {
        get
        {
            return _FirstName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("FirstName");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("FirstName");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnFirstNameChanging(value);
            ReportPropertyChanging("FirstName");
            _FirstName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("FirstName");
            OnFirstNameChanged();
        }
    }
    private global::System.String _FirstName;
    partial void OnFirstNameChanging(global::System.String value);
    partial void OnFirstNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String MiddleName
    {
        get
        {
            return _MiddleName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("MiddleName");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnMiddleNameChanging(value);
            ReportPropertyChanging("MiddleName");
            _MiddleName = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("MiddleName");
            OnMiddleNameChanged();
        }
    }
    private global::System.String _MiddleName;
    partial void OnMiddleNameChanging(global::System.String value);
    partial void OnMiddleNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String LastName
    {
        get
        {
            return _LastName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("LastName");

		//	else if (value.IsNull()) BusinessLayerHelper.ThrowErrorForNullValue("LastName");

			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLastNameChanging(value);
            ReportPropertyChanging("LastName");
            _LastName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("LastName");
            OnLastNameChanged();
        }
    }
    private global::System.String _LastName;
    partial void OnLastNameChanging(global::System.String value);
    partial void OnLastNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String SecondLastName
    {
        get
        {
            return _SecondLastName;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("SecondLastName");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnSecondLastNameChanging(value);
            ReportPropertyChanging("SecondLastName");
            _SecondLastName = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("SecondLastName");
            OnSecondLastNameChanged();
        }
    }
    private global::System.String _SecondLastName;
    partial void OnSecondLastNameChanging(global::System.String value);
    partial void OnSecondLastNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Title
    {
        get
        {
            return _Title;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Title");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnTitleChanging(value);
            ReportPropertyChanging("Title");
            _Title = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Title");
            OnTitleChanged();
        }
    }
    private global::System.String _Title;
    partial void OnTitleChanging(global::System.String value);
    partial void OnTitleChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String License
    {
        get
        {
            return _License;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("License");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnLicenseChanging(value);
            ReportPropertyChanging("License");
            _License = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("License");
            OnLicenseChanged();
        }
    }
    private global::System.String _License;
    partial void OnLicenseChanging(global::System.String value);
    partial void OnLicenseChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Address1
    {
        get
        {
            return _Address1;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Address1");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnAddress1Changing(value);
            ReportPropertyChanging("Address1");
            _Address1 = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Address1");
            OnAddress1Changed();
        }
    }
    private global::System.String _Address1;
    partial void OnAddress1Changing(global::System.String value);
    partial void OnAddress1Changed();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Address2
    {
        get
        {
            return _Address2;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Address2");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnAddress2Changing(value);
            ReportPropertyChanging("Address2");
            _Address2 = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Address2");
            OnAddress2Changed();
        }
    }
    private global::System.String _Address2;
    partial void OnAddress2Changing(global::System.String value);
    partial void OnAddress2Changed();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String City
    {
        get
        {
            return _City;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("City");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCityChanging(value);
            ReportPropertyChanging("City");
            _City = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("City");
            OnCityChanged();
        }
    }
    private global::System.String _City;
    partial void OnCityChanging(global::System.String value);
    partial void OnCityChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String State
    {
        get
        {
            return _State;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("State");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnStateChanging(value);
            ReportPropertyChanging("State");
            _State = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("State");
            OnStateChanged();
        }
    }
    private global::System.String _State;
    partial void OnStateChanging(global::System.String value);
    partial void OnStateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String ZipCode
    {
        get
        {
            return _ZipCode;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("ZipCode");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnZipCodeChanging(value);
            ReportPropertyChanging("ZipCode");
            _ZipCode = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("ZipCode");
            OnZipCodeChanged();
        }
    }
    private global::System.String _ZipCode;
    partial void OnZipCodeChanging(global::System.String value);
    partial void OnZipCodeChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Phone
    {
        get
        {
            return _Phone;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Phone");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnPhoneChanging(value);
            ReportPropertyChanging("Phone");
            _Phone = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Phone");
            OnPhoneChanged();
        }
    }
    private global::System.String _Phone;
    partial void OnPhoneChanging(global::System.String value);
    partial void OnPhoneChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String PhoneExtension
    {
        get
        {
            return _PhoneExtension;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("PhoneExtension");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnPhoneExtensionChanging(value);
            ReportPropertyChanging("PhoneExtension");
            _PhoneExtension = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("PhoneExtension");
            OnPhoneExtensionChanged();
        }
    }
    private global::System.String _PhoneExtension;
    partial void OnPhoneExtensionChanging(global::System.String value);
    partial void OnPhoneExtensionChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String CellPhone
    {
        get
        {
            return _CellPhone;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("CellPhone");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnCellPhoneChanging(value);
            ReportPropertyChanging("CellPhone");
            _CellPhone = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("CellPhone");
            OnCellPhoneChanged();
        }
    }
    private global::System.String _CellPhone;
    partial void OnCellPhoneChanging(global::System.String value);
    partial void OnCellPhoneChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Fax
    {
        get
        {
            return _Fax;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("Fax");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnFaxChanging(value);
            ReportPropertyChanging("Fax");
            _Fax = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Fax");
            OnFaxChanged();
        }
    }
    private global::System.String _Fax;
    partial void OnFaxChanging(global::System.String value);
    partial void OnFaxChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> EditedDate
    {
        get
        {
            return _EditedDate;
        }
        set
        {
            //-- Logic for Null and Empty Value Validation [CUSTOM CODE]
			
			//if (value.IsEmpty()) BusinessLayerHelper.ThrowErrorForEmptyValue("EditedDate");


			//-- Logic for Null and Empty Value Validation Ends [CUSTOM CODE]
			
			OnEditedDateChanging(value);
            ReportPropertyChanging("EditedDate");
            _EditedDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("EditedDate");
            OnEditedDateChanged();
        }
    }
    private Nullable<global::System.DateTime> _EditedDate;
    partial void OnEditedDateChanging(Nullable<global::System.DateTime> value);
    partial void OnEditedDateChanged();

    #endregion


    #region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [XmlIgnoreAttribute()]
    [SoapIgnoreAttribute()]
    [DataMemberAttribute()]
    [EdmRelationshipNavigationPropertyAttribute("Model_Namespace", "FK_Users_UserInfo", "User")]
    public User User
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model_Namespace.FK_Users_UserInfo", "User").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model_Namespace.FK_Users_UserInfo", "User").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [BrowsableAttribute(false)]
    [DataMemberAttribute()]
    public EntityReference<User> UserReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model_Namespace.FK_Users_UserInfo", "User");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model_Namespace.FK_Users_UserInfo", "User", value);
            }
        }
    }

    #endregion

}

#endregion



}
